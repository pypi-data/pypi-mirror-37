# Generated by v0.1.2 for sde v0.3.0
from rest_framework.routers import DefaultRouter
from . import views


router = DefaultRouter()
router.register(r'agtagent',
                views.AgtAgentViewSet,
                base_name='armada_sde_agtagent')
router.register(r'agtagenttype',
                views.AgtAgentTypeViewSet,
                base_name='armada_sde_agtagenttype')
router.register(r'agtresearchagent',
                views.AgtResearchAgentViewSet,
                base_name='armada_sde_agtresearchagent')
router.register(r'certcert',
                views.CertCertViewSet,
                base_name='armada_sde_certcert')
router.register(r'certmastery',
                views.CertMasteryViewSet,
                base_name='armada_sde_certmastery')
router.register(r'certskill',
                views.CertSkillViewSet,
                base_name='armada_sde_certskill')
router.register(r'chrancestry',
                views.ChrAncestryViewSet,
                base_name='armada_sde_chrancestry')
router.register(r'chrattribute',
                views.ChrAttributeViewSet,
                base_name='armada_sde_chrattribute')
router.register(r'chrbloodline',
                views.ChrBloodlineViewSet,
                base_name='armada_sde_chrbloodline')
router.register(r'chrfaction',
                views.ChrFactionViewSet,
                base_name='armada_sde_chrfaction')
router.register(r'chrrace',
                views.ChrRaceViewSet,
                base_name='armada_sde_chrrace')
router.register(r'crpactivity',
                views.CrpActivityViewSet,
                base_name='armada_sde_crpactivity')
router.register(r'crpnpccorporation',
                views.CrpNPCCorporationViewSet,
                base_name='armada_sde_crpnpccorporation')
router.register(r'crpnpccorporationdivision',
                views.CrpNPCCorporationDivisionViewSet,
                base_name='armada_sde_crpnpccorporationdivision')
router.register(r'crpnpccorporationresearchfield',
                views.CrpNPCCorporationResearchFieldViewSet,
                base_name='armada_sde_crpnpccorporationresearchfield')
router.register(r'crpnpccorporationtrade',
                views.CrpNPCCorporationTradeViewSet,
                base_name='armada_sde_crpnpccorporationtrade')
router.register(r'crpnpcdivision',
                views.CrpNPCDivisionViewSet,
                base_name='armada_sde_crpnpcdivision')
router.register(r'dgmattributecategory',
                views.DgmAttributeCategoryViewSet,
                base_name='armada_sde_dgmattributecategory')
router.register(r'dgmattributetype',
                views.DgmAttributeTypeViewSet,
                base_name='armada_sde_dgmattributetype')
router.register(r'dgmeffect',
                views.DgmEffectViewSet,
                base_name='armada_sde_dgmeffect')
router.register(r'dgmexpression',
                views.DgmExpressionViewSet,
                base_name='armada_sde_dgmexpression')
router.register(r'dgmtypeattribute',
                views.DgmTypeAttributeViewSet,
                base_name='armada_sde_dgmtypeattribute')
router.register(r'dgmtypeeffect',
                views.DgmTypeEffectViewSet,
                base_name='armada_sde_dgmtypeeffect')
router.register(r'evegraphic',
                views.EveGraphicViewSet,
                base_name='armada_sde_evegraphic')
router.register(r'eveicon',
                views.EveIconViewSet,
                base_name='armada_sde_eveicon')
router.register(r'eveunit',
                views.EveUnitViewSet,
                base_name='armada_sde_eveunit')
router.register(r'industryactivity',
                views.IndustryActivityViewSet,
                base_name='armada_sde_industryactivity')
router.register(r'industryactivitymaterial',
                views.IndustryActivityMaterialViewSet,
                base_name='armada_sde_industryactivitymaterial')
router.register(r'industryactivityprobability',
                views.IndustryActivityProbabilityViewSet,
                base_name='armada_sde_industryactivityprobability')
router.register(r'industryactivityproduct',
                views.IndustryActivityProductViewSet,
                base_name='armada_sde_industryactivityproduct')
router.register(r'industryactivityrace',
                views.IndustryActivityRaceViewSet,
                base_name='armada_sde_industryactivityrace')
router.register(r'industryactivityskill',
                views.IndustryActivitySkillViewSet,
                base_name='armada_sde_industryactivityskill')
router.register(r'industryblueprint',
                views.IndustryBlueprintViewSet,
                base_name='armada_sde_industryblueprint')
router.register(r'invcategory',
                views.InvCategoryViewSet,
                base_name='armada_sde_invcategory')
router.register(r'invcontrabandtype',
                views.InvContrabandTypeViewSet,
                base_name='armada_sde_invcontrabandtype')
router.register(r'invcontroltowerresource',
                views.InvControlTowerResourceViewSet,
                base_name='armada_sde_invcontroltowerresource')
router.register(r'invcontroltowerresourcepurpose',
                views.InvControlTowerResourcePurposeViewSet,
                base_name='armada_sde_invcontroltowerresourcepurpose')
router.register(r'invflag',
                views.InvFlagViewSet,
                base_name='armada_sde_invflag')
router.register(r'invgroup',
                views.InvGroupViewSet,
                base_name='armada_sde_invgroup')
router.register(r'invitem',
                views.InvItemViewSet,
                base_name='armada_sde_invitem')
router.register(r'invmarketgroup',
                views.InvMarketGroupViewSet,
                base_name='armada_sde_invmarketgroup')
router.register(r'invmetagroup',
                views.InvMetaGroupViewSet,
                base_name='armada_sde_invmetagroup')
router.register(r'invmetatype',
                views.InvMetaTypeViewSet,
                base_name='armada_sde_invmetatype')
router.register(r'invname',
                views.InvNameViewSet,
                base_name='armada_sde_invname')
router.register(r'invposition',
                views.InvPositionViewSet,
                base_name='armada_sde_invposition')
router.register(r'invtrait',
                views.InvTraitViewSet,
                base_name='armada_sde_invtrait')
router.register(r'invtype',
                views.InvTypeViewSet,
                base_name='armada_sde_invtype')
router.register(r'invtypematerial',
                views.InvTypeMaterialViewSet,
                base_name='armada_sde_invtypematerial')
router.register(r'invtypereaction',
                views.InvTypeReactionViewSet,
                base_name='armada_sde_invtypereaction')
router.register(r'invuniquename',
                views.InvUniqueNameViewSet,
                base_name='armada_sde_invuniquename')
router.register(r'invvolume',
                views.InvVolumeViewSet,
                base_name='armada_sde_invvolume')
router.register(r'mapcelestialstatistic',
                views.MapCelestialStatisticViewSet,
                base_name='armada_sde_mapcelestialstatistic')
router.register(r'mapconstellation',
                views.MapConstellationViewSet,
                base_name='armada_sde_mapconstellation')
router.register(r'mapconstellationjump',
                views.MapConstellationJumpViewSet,
                base_name='armada_sde_mapconstellationjump')
router.register(r'mapdenormalize',
                views.MapDenormalizeViewSet,
                base_name='armada_sde_mapdenormalize')
router.register(r'mapjump',
                views.MapJumpViewSet,
                base_name='armada_sde_mapjump')
router.register(r'maplandmark',
                views.MapLandmarkViewSet,
                base_name='armada_sde_maplandmark')
router.register(r'maplocationscene',
                views.MapLocationSceneViewSet,
                base_name='armada_sde_maplocationscene')
router.register(r'maplocationwormholeclass',
                views.MapLocationWormholeClassViewSet,
                base_name='armada_sde_maplocationwormholeclass')
router.register(r'mapregion',
                views.MapRegionViewSet,
                base_name='armada_sde_mapregion')
router.register(r'mapregionjump',
                views.MapRegionJumpViewSet,
                base_name='armada_sde_mapregionjump')
router.register(r'mapsolarsystem',
                views.MapSolarSystemViewSet,
                base_name='armada_sde_mapsolarsystem')
router.register(r'mapsolarsystemjump',
                views.MapSolarSystemJumpViewSet,
                base_name='armada_sde_mapsolarsystemjump')
router.register(r'mapuniverse',
                views.MapUniverseViewSet,
                base_name='armada_sde_mapuniverse')
router.register(r'planetschematic',
                views.PlanetSchematicViewSet,
                base_name='armada_sde_planetschematic')
router.register(r'planetschematicspinmap',
                views.PlanetSchematicsPinMapViewSet,
                base_name='armada_sde_planetschematicspinmap')
router.register(r'planetschematicstypemap',
                views.PlanetSchematicsTypeMapViewSet,
                base_name='armada_sde_planetschematicstypemap')
router.register(r'ramactivity',
                views.RamActivityViewSet,
                base_name='armada_sde_ramactivity')
router.register(r'ramassemblylinestation',
                views.RamAssemblyLineStationViewSet,
                base_name='armada_sde_ramassemblylinestation')
router.register(r'ramassemblylinetype',
                views.RamAssemblyLineTypeViewSet,
                base_name='armada_sde_ramassemblylinetype')
router.register(r'ramassemblylinetypedetailpercategory',
                views.RamAssemblyLineTypeDetailPerCategoryViewSet,
                base_name='armada_sde_ramassemblylinetypedetailpercategory')
router.register(r'ramassemblylinetypedetailpergroup',
                views.RamAssemblyLineTypeDetailPerGroupViewSet,
                base_name='armada_sde_ramassemblylinetypedetailpergroup')
router.register(r'raminstallationtypecontent',
                views.RamInstallationTypeContentViewSet,
                base_name='armada_sde_raminstallationtypecontent')
router.register(r'skin',
                views.SkinViewSet,
                base_name='armada_sde_skin')
router.register(r'skinlicense',
                views.SkinLicenseViewSet,
                base_name='armada_sde_skinlicense')
router.register(r'skinmaterial',
                views.SkinMaterialViewSet,
                base_name='armada_sde_skinmaterial')
router.register(r'skinship',
                views.SkinShipViewSet,
                base_name='armada_sde_skinship')
router.register(r'staoperation',
                views.StaOperationViewSet,
                base_name='armada_sde_staoperation')
router.register(r'staoperationservice',
                views.StaOperationServiceViewSet,
                base_name='armada_sde_staoperationservice')
router.register(r'staservice',
                views.StaServiceViewSet,
                base_name='armada_sde_staservice')
router.register(r'stastation',
                views.StaStationViewSet,
                base_name='armada_sde_stastation')
router.register(r'stastationtype',
                views.StaStationTypeViewSet,
                base_name='armada_sde_stastationtype')
router.register(r'translationtable',
                views.TranslationTableViewSet,
                base_name='armada_sde_translationtable')
router.register(r'trntranslation',
                views.TrnTranslationViewSet,
                base_name='armada_sde_trntranslation')
router.register(r'trntranslationcolumn',
                views.TrnTranslationColumnViewSet,
                base_name='armada_sde_trntranslationcolumn')
router.register(r'trntranslationlanguage',
                views.TrnTranslationLanguageViewSet,
                base_name='armada_sde_trntranslationlanguage')
router.register(r'warcombatzone',
                views.WarCombatZoneViewSet,
                base_name='armada_sde_warcombatzone')
router.register(r'warcombatzonesystem',
                views.WarCombatZoneSystemViewSet,
                base_name='armada_sde_warcombatzonesystem')
urlpatterns = router.urls

