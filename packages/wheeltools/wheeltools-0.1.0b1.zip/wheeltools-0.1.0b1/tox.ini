[tox]
minversion = 3.4.0
envlist = fix_lint, py{27,34,35,36,37}, pypy{,3}
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
setenv = COVERAGE_FILE = {toxinidir}/.coverage.{envname}
deps = wheel0311: wheel==0.31.1
extras = testing
commands = pytest {posargs:--cov=wheeltools --cov-config="{toxinidir}/.coveragerc"}

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = coverage >= 4.4.1, < 5
       diff_cover
extras =
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxinidir}/.coverage
commands = coverage erase
           coverage combine
           coverage report -m
           coverage xml -o {toxinidir}/coverage.xml
           coverage html -d {toxinidir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxinidir}/coverage.xml

[testenv:codecov]
description = upload coverage data to codecov (only run on CI)
deps =
  {[testenv:coverage]deps}
  codecov
skip_install = true
setenv = {[testenv:coverage]setenv}
passenv = TOXENV CI TRAVIS TRAVIS_* CODECOV_*
changedir = {toxinidir}
commands =
  coverage combine
  codecov -X gcov --env TOXENV TRAVIS_PYTHON_VERSION

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3
passenv = HOMEPATH PROGRAMDATA http_proxy https_proxy no_proxy
deps = pre-commit == 1.12.0
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:dev]
description = generate a DEV environment
extras = testing, docs
# required to make looponfail reload on every source code change
usedevelop = True
basepython = python3.7
commands = python -m pip list --format=columns
           python -c 'import sys; print(sys.executable)'

[pytest]
testpaths =
    tests
addopts =
    -v
    -r a

[flake8]
max-complexity = 22
max-line-length = 120
ignore = E203, W503, C901, E402
exclude = virtualenv_embedded/site.py

[pep8]
max-line-length = 120
