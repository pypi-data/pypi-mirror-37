# automatically generated by the FlatBuffers compiler, do not modify

# namespace: lumby_fbs

import flatbuffers

class OrderContent(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsOrderContent(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OrderContent()
        x.Init(buf, n + offset)
        return x

    # OrderContent
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OrderContent
    def BaseId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OrderContent
    def QuoteId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OrderContent
    def Amount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # OrderContent
    def Rate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # OrderContent
    def OrderId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def OrderContentStart(builder): builder.StartObject(5)
def OrderContentAddBaseId(builder, baseId): builder.PrependUint32Slot(0, baseId, 0)
def OrderContentAddQuoteId(builder, quoteId): builder.PrependUint32Slot(1, quoteId, 0)
def OrderContentAddAmount(builder, amount): builder.PrependFloat64Slot(2, amount, 0.0)
def OrderContentAddRate(builder, rate): builder.PrependFloat64Slot(3, rate, 0.0)
def OrderContentAddOrderId(builder, orderId): builder.PrependInt64Slot(4, orderId, 0)
def OrderContentEnd(builder): return builder.EndObject()
