# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: 3.2.14
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six


class ObjectStorageZoneInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cluster_fs_id': 'str',
        'endpoints': 'list[str]',
        'name': 'str',
        'realm_name': 'str',
        'system_access_key': 'str',
        'system_secret_key': 'str',
        'system_user': 'str',
        'zone_id': 'str',
        'zonegroup_name': 'str'
    }

    attribute_map = {
        'cluster_fs_id': 'cluster_fs_id',
        'endpoints': 'endpoints',
        'name': 'name',
        'realm_name': 'realm_name',
        'system_access_key': 'system_access_key',
        'system_secret_key': 'system_secret_key',
        'system_user': 'system_user',
        'zone_id': 'zone_id',
        'zonegroup_name': 'zonegroup_name'
    }

    def __init__(self, cluster_fs_id=None, endpoints=None, name=None, realm_name=None, system_access_key=None, system_secret_key=None, system_user=None, zone_id=None, zonegroup_name=None):  # noqa: E501
        """ObjectStorageZoneInfo - a model defined in Swagger"""  # noqa: E501

        self._cluster_fs_id = None
        self._endpoints = None
        self._name = None
        self._realm_name = None
        self._system_access_key = None
        self._system_secret_key = None
        self._system_user = None
        self._zone_id = None
        self._zonegroup_name = None
        self.discriminator = None

        self.cluster_fs_id = cluster_fs_id
        self.endpoints = endpoints
        if name is not None:
            self.name = name
        if realm_name is not None:
            self.realm_name = realm_name
        if system_access_key is not None:
            self.system_access_key = system_access_key
        if system_secret_key is not None:
            self.system_secret_key = system_secret_key
        if system_user is not None:
            self.system_user = system_user
        if zone_id is not None:
            self.zone_id = zone_id
        if zonegroup_name is not None:
            self.zonegroup_name = zonegroup_name

    @property
    def cluster_fs_id(self):
        """Gets the cluster_fs_id of this ObjectStorageZoneInfo.  # noqa: E501

        cluster uuid  # noqa: E501

        :return: The cluster_fs_id of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._cluster_fs_id

    @cluster_fs_id.setter
    def cluster_fs_id(self, cluster_fs_id):
        """Sets the cluster_fs_id of this ObjectStorageZoneInfo.

        cluster uuid  # noqa: E501

        :param cluster_fs_id: The cluster_fs_id of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """
        if cluster_fs_id is None:
            raise ValueError("Invalid value for `cluster_fs_id`, must not be `None`")  # noqa: E501

        self._cluster_fs_id = cluster_fs_id

    @property
    def endpoints(self):
        """Gets the endpoints of this ObjectStorageZoneInfo.  # noqa: E501

        communicating endpoints  # noqa: E501

        :return: The endpoints of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: list[str]
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this ObjectStorageZoneInfo.

        communicating endpoints  # noqa: E501

        :param endpoints: The endpoints of this ObjectStorageZoneInfo.  # noqa: E501
        :type: list[str]
        """
        if endpoints is None:
            raise ValueError("Invalid value for `endpoints`, must not be `None`")  # noqa: E501

        self._endpoints = endpoints

    @property
    def name(self):
        """Gets the name of this ObjectStorageZoneInfo.  # noqa: E501

        zone name  # noqa: E501

        :return: The name of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ObjectStorageZoneInfo.

        zone name  # noqa: E501

        :param name: The name of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def realm_name(self):
        """Gets the realm_name of this ObjectStorageZoneInfo.  # noqa: E501

        realm name  # noqa: E501

        :return: The realm_name of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._realm_name

    @realm_name.setter
    def realm_name(self, realm_name):
        """Sets the realm_name of this ObjectStorageZoneInfo.

        realm name  # noqa: E501

        :param realm_name: The realm_name of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._realm_name = realm_name

    @property
    def system_access_key(self):
        """Gets the system_access_key of this ObjectStorageZoneInfo.  # noqa: E501

        system user's access key  # noqa: E501

        :return: The system_access_key of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._system_access_key

    @system_access_key.setter
    def system_access_key(self, system_access_key):
        """Sets the system_access_key of this ObjectStorageZoneInfo.

        system user's access key  # noqa: E501

        :param system_access_key: The system_access_key of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._system_access_key = system_access_key

    @property
    def system_secret_key(self):
        """Gets the system_secret_key of this ObjectStorageZoneInfo.  # noqa: E501

        system user's secret key  # noqa: E501

        :return: The system_secret_key of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._system_secret_key

    @system_secret_key.setter
    def system_secret_key(self, system_secret_key):
        """Sets the system_secret_key of this ObjectStorageZoneInfo.

        system user's secret key  # noqa: E501

        :param system_secret_key: The system_secret_key of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._system_secret_key = system_secret_key

    @property
    def system_user(self):
        """Gets the system_user of this ObjectStorageZoneInfo.  # noqa: E501

        system user  # noqa: E501

        :return: The system_user of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._system_user

    @system_user.setter
    def system_user(self, system_user):
        """Sets the system_user of this ObjectStorageZoneInfo.

        system user  # noqa: E501

        :param system_user: The system_user of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._system_user = system_user

    @property
    def zone_id(self):
        """Gets the zone_id of this ObjectStorageZoneInfo.  # noqa: E501

        zone id  # noqa: E501

        :return: The zone_id of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id):
        """Sets the zone_id of this ObjectStorageZoneInfo.

        zone id  # noqa: E501

        :param zone_id: The zone_id of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._zone_id = zone_id

    @property
    def zonegroup_name(self):
        """Gets the zonegroup_name of this ObjectStorageZoneInfo.  # noqa: E501

        zonegroup name  # noqa: E501

        :return: The zonegroup_name of this ObjectStorageZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._zonegroup_name

    @zonegroup_name.setter
    def zonegroup_name(self, zonegroup_name):
        """Sets the zonegroup_name of this ObjectStorageZoneInfo.

        zonegroup name  # noqa: E501

        :param zonegroup_name: The zonegroup_name of this ObjectStorageZoneInfo.  # noqa: E501
        :type: str
        """

        self._zonegroup_name = zonegroup_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ObjectStorageZoneInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
