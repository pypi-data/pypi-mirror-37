{"version":3,"sources":["webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/workerManager.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/languageFeatures.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/tokenization.js","webpack:///./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","p","completeCallback","errorCallback","r","resources","_i","arguments","length","then","client","_","withSyncedResources","c","e","Range","Uri","DiagnosticsAdapter","_languageId","_disposables","_listener","Object","create","onModelAdd","model","handle","modeId","getModeId","uri","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","push","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","getModels","forEach","key","d","resource","worker","resetSchema","doValidation","diagnostics","markers","map","code","diag","String","severity","lsSeverity","main","Error","MarkerSeverity","Warning","Information","Info","Hint","toSeverity","startLineNumber","range","start","line","startColumn","character","endLineNumber","end","endColumn","message","source","getModel","undefined","err","console","error","fromPosition","position","column","lineNumber","fromRange","toRange","toCompletionItemKind","kind","mItemKind","languages","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","text","newText","languageFeatures_CompletionAdapter","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","items","entry","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","value","isIncomplete","toMarkdownString","thing","replace","language","HoverAdapter","provideHover","doHover","contents","Array","isArray","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","name","containerName","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","toSymbolKind","location","selectionRange","fromFormattingOptions","options","tabSize","insertSpaces","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","additionalTextEdits","FoldingRangeAdapter","provideFoldingRanges","context","ranges","result","startLine","endLine","Comment","FoldingRangeKind","Imports","Region","toFoldingRangeKind","promise","cancel","onCancellationRequested","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","comments","numberOfInsertedCharacters","adjustOffset","scanError","ret","scanner","jsonc_parser_main","lastWasColon","tokens","endState","clone","offset","getPosition","type","scan","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","getTokenError","startIndex","scopes","_state","equals","other","setStateData","__webpack_exports__","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"static/js/21.c76b9f10d057dde513b7.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/workerManager.js\n// module id = null\n// module chunks = ","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        }));\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/languageFeatures.js\n// module id = null\n// module chunks = ","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/tokenization.js\n// module id = null\n// module chunks = ","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_monaco-editor@0.14.3@monaco-editor/esm/vs/language/json/jsonMode.js\n// module id = null\n// module chunks = "],"sourceRoot":""}