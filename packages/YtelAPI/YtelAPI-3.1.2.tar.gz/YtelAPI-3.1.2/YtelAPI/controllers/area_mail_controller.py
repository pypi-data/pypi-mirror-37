# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from .base_controller import BaseController
from ..api_helper import APIHelper
from ..configuration import Configuration
from ..http.auth.basic_auth import BasicAuth

class AreaMailController(BaseController):

    """A Controller to access Endpoints in the YtelAPI API."""


    def create_delete_area_mail(self,
                                areamailid):
        """Does a POST request to /areamail/delete.json.

        Remove an AreaMail object by its AreaMailId.

        Args:
            areamailid (string): The unique identifier for an AreaMail
                object.

        Returns:
            string: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.base_uri
        _query_builder += '/areamail/delete.json'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'areamailid': areamailid
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return _context.response.raw_body

    def create_view_area_mail(self,
                              areamailid):
        """Does a POST request to /areamail/view.json.

        Retrieve an AreaMail object by its AreaMailId.

        Args:
            areamailid (string): The unique identifier for an AreaMail
                object.

        Returns:
            string: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.base_uri
        _query_builder += '/areamail/view.json'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'areamailid': areamailid
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return _context.response.raw_body

    def create_list_area_mails(self,
                               page=None,
                               pagesize=None,
                               areamailsid=None,
                               date_created=None):
        """Does a POST request to /areamail/lists.json.

        Retrieve a list of AreaMail objects.

        Args:
            page (int, optional): The page count to retrieve from the total
                results in the collection. Page indexing starts at 1.
            pagesize (int, optional): The count of objects to return per
                page.
            areamailsid (string, optional): The unique identifier for an
                AreaMail object.
            date_created (string, optional): The date the AreaMail was
                created.

        Returns:
            string: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.base_uri
        _query_builder += '/areamail/lists.json'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'page': page,
            'pagesize': pagesize,
            'areamailsid': areamailsid,
            'dateCreated': date_created
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return _context.response.raw_body

    def create_area_mail(self,
                         routes,
                         attachbyid,
                         front,
                         back,
                         description=None,
                         targettype=None,
                         htmldata=None):
        """Does a POST request to /areamail/create.json.

        Create a new AreaMail object.

        Args:
            routes (string): List of routes that AreaMail should be delivered
                to.  A single route can be either a zipcode or a carrier
                route.List of routes that AreaMail should be delivered to.  A
                single route can be either a zipcode or a carrier route. A
                carrier route is in the form of 92610-C043 where the carrier
                route is composed of 5 numbers for zipcode, 1 letter for
                carrier route type, and 3 numbers for carrier route code.
                Delivery can be sent to mutliple routes by separating them
                with a commas. Valid Values: 92656, 92610-C043
            attachbyid (string): Set an existing areamail by attaching its
                AreamailId.
            front (string): The front of the AreaMail item to be created. This
                can be a URL, local file, or an HTML string. Supported file
                types are PDF, PNG, and JPEG. Back required
            back (string): The back of the AreaMail item to be created. This
                can be a URL, local file, or an HTML string. Supported file
                types are PDF, PNG, and JPEG.
            description (string, optional): A string value to use as a
                description for this AreaMail item.
            targettype (string, optional): The delivery location type.
            htmldata (string, optional): A string value that contains HTML
                markup.

        Returns:
            string: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.base_uri
        _query_builder += '/areamail/create.json'
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'routes': routes,
            'attachbyid': attachbyid,
            'front': front,
            'back': back,
            'description': description,
            'targettype': targettype,
            'htmldata': htmldata
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        BasicAuth.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return _context.response.raw_body
