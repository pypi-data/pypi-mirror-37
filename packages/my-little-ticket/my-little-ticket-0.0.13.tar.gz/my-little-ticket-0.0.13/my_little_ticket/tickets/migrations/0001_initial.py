# Generated by Django 2.0.5 on 2018-06-06 12:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import my_little_ticket.tickets.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z]+[0-9a-zA-Z-]*$', 'Only alphanumeric characters are allowed.')])),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, max_length=2048, null=True)),
                ('link', models.URLField(max_length=1024)),
                ('strategy_py_module', models.CharField(choices=[('my_little_ticket.plugins.default.DefaultStrategy', 'my_little_ticket.plugins.default.DefaultStrategy')], max_length=255)),
                ('strategy_params', my_little_ticket.tickets.models.JSONField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z]+[0-9a-zA-Z-]*$', 'Only alphanumeric characters are allowed.')])),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, max_length=1024, null=True)),
                ('link', models.URLField(blank=True, max_length=1024)),
                ('py_module', models.CharField(choices=[('my_little_ticket.plugins.jira.JiraPlugin', 'my_little_ticket.plugins.jira.JiraPlugin')], max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('params', my_little_ticket.tickets.models.JSONField(blank=True, null=True)),
                ('success', models.PositiveIntegerField(default=0)),
                ('failure', models.PositiveIntegerField(default=0)),
                ('success_on', models.DateTimeField(blank=True, null=True)),
                ('failure_on', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('external_id', models.CharField(max_length=64)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('refreshed_on', models.DateTimeField(auto_now=True)),
                ('summary', models.CharField(max_length=64)),
                ('text', models.TextField(blank=True, max_length=1024, null=True)),
                ('project', models.CharField(blank=True, max_length=64, null=True)),
                ('type', models.CharField(blank=True, max_length=64, null=True)),
                ('assignee', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
                ('link', models.URLField(blank=True, max_length=1024)),
                ('raw', my_little_ticket.tickets.models.JSONField(null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='tickets.Source')),
                ('tags', models.ManyToManyField(blank=True, to='tickets.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='board',
            name='sources',
            field=models.ManyToManyField(blank=True, to='tickets.Source'),
        ),
        migrations.AlterUniqueTogether(
            name='ticket',
            unique_together={('uuid', 'source')},
        ),
    ]
