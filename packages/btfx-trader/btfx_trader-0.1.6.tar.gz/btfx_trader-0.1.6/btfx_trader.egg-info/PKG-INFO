Metadata-Version: 1.1
Name: btfx-trader
Version: 0.1.6
Summary: Simple to use wrappers for the Bitfinex web socket api
Home-page: https://github.com/sentrip/btfx_trader
Author: Djordje Pepic
Author-email: djordje.m.pepic@gmail.com
License: GNU General Public License v3
Description: ===========
        btfx-trader
        ===========
        
        
        .. image:: https://img.shields.io/pypi/v/btfx_trader.svg
            :target: https://pypi.python.org/pypi/btfx-trader/
        
        .. image:: https://travis-ci.org/sentrip/btfx-trader.svg?branch=master
            :target: https://travis-ci.com/sentrip/btfx-trader/
        
        .. image:: https://readthedocs.org/projects/btfx-trader/badge/?version=latest
            :target: https://btfx-trader.readthedocs.io/en/latest/?badge=latest
            :alt: Documentation Status
        
        .. image:: https://codecov.io/gh/sentrip/btfx-trader/branch/master/graph/badge.svg
            :target: https://codecov.io/gh/sentrip/btfx-trader
        
        .. image:: https://pyup.io/repos/github/sentrip/btfx_trader/shield.svg
            :target: https://pyup.io/repos/github/sentrip/btfx-trader/
            :alt: Updates
        
        
        
        Simple to use wrappers for Bitfinex's web socket api
        
        
        * Free software: GNU General Public License v3
        * Documentation: https://btfx-trader.readthedocs.io.
        
        
        Features
        --------
        
        * Access to cryptocurrency data with an API similar to queue.Queue
        * Simple trading API that responds to account data
        
        Installation
        -------------
        
        To install btfx-trader, run this command in your terminal:
        
        .. code-block:: shell
        
            pip install btfx-trader
        
        Usage
        ------
        
        To use public data:
        
        .. code-block:: python
        
            from btfx_trader import PublicData
        
            q = PublicData(types=['tickers'], symbols=['BTCUSD'])
            q.connect()
        
            while True:
                data = q.get('tickers', 'BTCUSD')
        
        
        To make an order:
        
        .. code-block:: python
        
            from btfx_trader import Trader
        
            trader = Trader('YOUR_BITFINEX_KEY', 'YOUR_BITFINEX_SECRET')
            trader.connect()
            # Order 0.01 BTC at $10000 per bitcoin
            order_id = trader.order('BTCUSD', 10000, dollar_amount=100)
        
        
        To cancel an order:
        
        .. code-block:: python
        
            # for a single order
            trader.cancel(order_id)
            # for multiple orders
            trader.cancel_all(older_than=10)
        
        
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        History
        =======
        
        0.1.6 (2018-10-15)
        ------------------
        
        * Fix btfxwss dependency update error
        
        
        0.1.5 (2018-06-04)
        ------------------
        
        * Fix rendering of docs
        
        
        0.1.4 (2018-06-04)
        ------------------
        
        * Updated README
        
        
        0.1.3 (2018-05-28)
        ------------------
        
        * Updated codecov config to only run with travis-ci builds.
        
        
        0.1.2 (2018-05-27)
        ------------------
        
        * Added codecov to docs.
        
        
        0.1.1 (2018-05-27)
        ------------------
        
        * Fixed rendering of readme on pypi.
        
        
        0.1.0 (2018-05-25)
        ------------------
        
        * First release on PyPI.
        
Keywords: btfx_trader
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
