# ==========================
# Variant calling - Samtools
# ==========================
---

- slug: vc-samtools
  name: Variant calling (Samtools)
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:1.0.0
  data_name: "{{ mapping.bam.file|basename|default('?') }}"
  version: 1.2.1
  type: data:variants:vcf
  category: Other
  flow_collection: sample
  persistence: CACHED
  description: >
    Samtools variant calling. See[here](http://www.htslib.org/workflow/) for
    more information.
  input:
    - name: genome
      label: Reference genome
      type: data:genome:fasta
    - name: mapping
      label: Mapped reads
      type: data:alignment:bam
    - name: bed
      label: BED file
      type: data:bed
      required: false
      description: >
        BED file containing a list of regions or sites where pileup or BCF should be generated.
    - name: options
      label: Options
      group:
        - name: rmdup
          label: Remove duplicates
          type: basic:boolean
          default: true
          description: >
            Remove duplicates using "samtools rmdup". Not needed if read duplicates have already been removed.
        - name: Q
          label: Q
          type: basic:integer
          default: 10
          description: >
            Minimum RMS mapping quality for SNPs (default: 10).
        - name: d
          label: d
          type: basic:integer
          default: 2
          description: >
            Minimum read depth (default: 2)
        - name: D
          label: D
          type: basic:integer
          default: 10000000
          description: >
            Minimum read depth (default: 10000000)
  output:
    - name: vcf
      label: Called variants
      type: basic:file
    - name: tbi
      label: Tabix index
      type: basic:file
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      BAM_FILE=`basename {{ mapping.bam.file }} .bam`
      BAM_MPILEUP={{ mapping.bam.file }}

      {% if options.rmdup %}
        echo "removing duplicates"
        samtools rmdup {{ mapping.bam.file }} "${BAM_FILE}_dedup.bam"
        re-checkrc "The process of removing duplicates failed."
        BAM_MPILEUP="${BAM_FILE}_dedup.bam"
      {% endif %}

      samtools \
        mpileup \
        --no-BAQ \
        --uncompressed \
        --BCF \
        --fasta-ref {{ genome.fasta.file }} \
        {% if bed %}--positions {{ bed.bed.file }}{% endif %} \
        --output "${BAM_FILE}_raw.bcf" \
        "${BAM_MPILEUP}"
      re-checkrc "Samtools mpileup failed."
      re-progress 0.5

      bcftools \
        call \
        --output-type v \
        --multiallelic-caller \
        --variants-only \
        --format-fields GQ \
        "${BAM_FILE}_raw.bcf" \
          | vcfutils.pl varFilter \
              -d {{options.d}} \
              -D {{options.D}} \
              -Q {{options.Q}} - > "${BAM_FILE}_filtered_variants.vcf"
      re-checkrc "bcftools view command failed."

      bgzip -c "${BAM_FILE}_filtered_variants.vcf" > "${BAM_FILE}_filtered_variants.vcf.gz"
      re-checkrc
      re-progress 0.9

      tabix -p vcf "${BAM_FILE}_filtered_variants.vcf.gz"
      re-checkrc
      re-progress 0.95

      re-save-file vcf "${BAM_FILE}_filtered_variants.vcf.gz"
      re-save-file tbi "${BAM_FILE}_filtered_variants.vcf.gz.tbi"

      re-save species {{ mapping.species }}
      re-save build {{ mapping.build }}
