log_format ont
	'$remote_addr - $remote_user [$time_local] '
	'"$request" $status $bytes_sent '
	'"$http_referer" "$http_user_agent" '
	'"$gzip_ratio" ';
	#'"$uri" '
	#'"$redirect_uri" ';

lua_package_path "/tmp/lua-resty-http/lib/?.lua;/etc/nginx/?.lua;;";  # adjust for the os in question

map_hash_bucket_size 2048;

map $uri $redirect_uri {
	include ontology-uri-map.conf;
}

map $uri $redirect_ilx_scr {
	include uri-ilx-map.conf;
	include uri-scr-map.conf;
}

upstream hierarchies {
	server localhost:8000;  # change to a remote
}

server {
	listen 80;
	listen [::]:80;
	server_name ontology.neuinfo.org;
	access_log /var/log/nginx/ontology.neuinfo.org.access_log ont;
	error_log /var/log/nginx/ontology.neuinfo.org.error_log info;
	root /var/www/ontology;
	resolver 8.8.8.8 8.8.4.4 valid=600s;
	lua_ssl_verify_depth 2;
	lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;  # adjust for the os in question
	location ^~ /docs {
		gunzip on;  # this may be required here to prevent bandwidth inscrease issues
		proxy_pass http://hierarchies/docs;
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
	}
	location ^~ /trees {
		gunzip on;  # this may be required here to prevent bandwidth inscrease issues
		proxy_pass http://hierarchies/trees;
		proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $server_name;
	}
	location ~ ^/NIF([\w\/]*)/(\w+)/version/(\d+)/\2\.ttl$ {
		# lua_code_cache off;  # uncomment for debug
		content_by_lua_file "/etc/nginx/version-lookup.lua";  # must be full path
	}
	location ~ /NIF/(.+\.ttl)$ {
		return 302 https://raw.githubusercontent.com/SciCrunch/NIF-Ontology/master/$1;
	}
	location ~ ^/NIF/ttl/(external/.+\.owl)$ {
		return 302 https://raw.githubusercontent.com/SciCrunch/NIF-Ontology/master/ttl/$1;
	}
	location ~ ^/NIF/ttl([a-zA-Z/]*/*)$ {
		return 302 https://github.com/SciCrunch/NIF-Ontology/tree/master/ttl$1;
	}
	location ~ ^/NIF/*$ {
		return 301 https://github.com/SciCrunch/NIF-Ontology/tree/master;
	}
	location ~ ^/NIF/(Backend|BiomaterialEntities|DigitalEntities|Dysfunction|Function|Retired|Views).+\.owl$ {
		try_files /redirect.html =500;
	}
	location ~ ^/NIF/nif.owl$ {
		return 302 https://raw.githubusercontent.com/SciCrunch/NIF-Ontology/xml-final/nif.owl;
	}
	location = / {
		return 301 https://github.com/SciCrunch/NIF-Ontology;
	}
	location / {
		try_files $uri @redirect;
	}
	location @redirect {
		if ($redirect_uri) {
			return 301 $redirect_uri;
		}
	}
}

server {
	listen 80;
	listen [::]:80;
	server_name uri.neuinfo.org;
	access_log /var/log/nginx/uri.neuinfo.org.access_log ont;
	error_log /var/log/nginx/uri.neuinfo.org.error_log info;
	root /dev/null;
	location / {
		if ($redirect_ilx_scr) {
			return 303 $redirect_ilx_scr;
		}
	}
}
