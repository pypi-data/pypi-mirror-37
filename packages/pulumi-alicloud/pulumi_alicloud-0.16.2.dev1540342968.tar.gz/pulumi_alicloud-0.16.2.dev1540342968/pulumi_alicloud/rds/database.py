# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Database(pulumi.CustomResource):
    """
    Provides an RDS database resource. A DB database deployed in a DB instance. A DB instance can own multiple databases.
    
    ~> **NOTE:** At present, it does not support creating 'PostgreSQL' and 'PPAS' database. You have to login RDS instance to create manually.
    """
    def __init__(__self__, __name__, __opts__=None, character_set=None, description=None, instance_id=None, name=None):
        """Create a Database resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if character_set and not isinstance(character_set, basestring):
            raise TypeError('Expected property character_set to be a basestring')
        __self__.character_set = character_set
        """
        Character set. The value range is limited to the following:
        - MySQL: [ utf8, gbk, latin1, utf8mb4 ] \(`utf8mb4` only supports versions 5.5 and 5.6\).
        - SQLServer: [ Chinese_PRC_CI_AS, Chinese_PRC_CS_AS, SQL_Latin1_General_CP1_CI_AS, SQL_Latin1_General_CP1_CS_AS, Chinese_PRC_BIN ]
        """
        __props__['characterSet'] = character_set

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        Database description. It cannot begin with https://. It must start with a Chinese character or English letter. It can include Chinese and English characters, underlines (_), hyphens (-), and numbers. The length may be 2-256 characters.
        """
        __props__['description'] = description

        if not instance_id:
            raise TypeError('Missing required property instance_id')
        elif not isinstance(instance_id, basestring):
            raise TypeError('Expected property instance_id to be a basestring')
        __self__.instance_id = instance_id
        """
        The Id of instance that can run database.
        """
        __props__['instanceId'] = instance_id

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Name of the database requiring a uniqueness check. It may consist of lower case letters, numbers, and underlines, and must start with a letter
        and have no more than 64 characters.
        """
        __props__['name'] = name

        super(Database, __self__).__init__(
            'alicloud:rds/database:Database',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'characterSet' in outs:
            self.character_set = outs['characterSet']
        if 'description' in outs:
            self.description = outs['description']
        if 'instanceId' in outs:
            self.instance_id = outs['instanceId']
        if 'name' in outs:
            self.name = outs['name']
