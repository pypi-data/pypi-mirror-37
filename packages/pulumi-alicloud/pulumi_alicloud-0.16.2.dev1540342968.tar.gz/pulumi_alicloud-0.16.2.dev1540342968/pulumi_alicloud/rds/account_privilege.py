# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class AccountPrivilege(pulumi.CustomResource):
    """
    Provides an RDS account privilege resource and used to grant several database some access privilege. A database can be granted by multiple account.
    """
    def __init__(__self__, __name__, __opts__=None, account_name=None, db_names=None, instance_id=None, privilege=None):
        """Create a AccountPrivilege resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not account_name:
            raise TypeError('Missing required property account_name')
        elif not isinstance(account_name, basestring):
            raise TypeError('Expected property account_name to be a basestring')
        __self__.account_name = account_name
        """
        A specified account name.
        """
        __props__['accountName'] = account_name

        if not db_names:
            raise TypeError('Missing required property db_names')
        elif not isinstance(db_names, list):
            raise TypeError('Expected property db_names to be a list')
        __self__.db_names = db_names
        """
        List of specified database name.
        """
        __props__['dbNames'] = db_names

        if not instance_id:
            raise TypeError('Missing required property instance_id')
        elif not isinstance(instance_id, basestring):
            raise TypeError('Expected property instance_id to be a basestring')
        __self__.instance_id = instance_id
        """
        The Id of instance in which account belongs.
        """
        __props__['instanceId'] = instance_id

        if privilege and not isinstance(privilege, basestring):
            raise TypeError('Expected property privilege to be a basestring')
        __self__.privilege = privilege
        """
        The privilege of one account access database. Valid values: ["ReadOnly", "ReadWrite"]. Default to "ReadOnly".
        """
        __props__['privilege'] = privilege

        super(AccountPrivilege, __self__).__init__(
            'alicloud:rds/accountPrivilege:AccountPrivilege',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'accountName' in outs:
            self.account_name = outs['accountName']
        if 'dbNames' in outs:
            self.db_names = outs['dbNames']
        if 'instanceId' in outs:
            self.instance_id = outs['instanceId']
        if 'privilege' in outs:
            self.privilege = outs['privilege']
