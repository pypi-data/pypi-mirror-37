# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Zone(pulumi.CustomResource):
    """
    Provides a Private Zone resource.
    
    ~> **NOTE:** Terraform will auto Create a Private Zone while it uses `alicloud_pvtz_zone` to build a Private Zone resource.
    """
    def __init__(__self__, __name__, __opts__=None, name=None, remark=None):
        """Create a Zone resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the Private Zone.
        """
        __props__['name'] = name

        if remark and not isinstance(remark, basestring):
            raise TypeError('Expected property remark to be a basestring')
        __self__.remark = remark
        """
        The remark of the Private Zone.
        """
        __props__['remark'] = remark

        __self__.creation_time = pulumi.runtime.UNKNOWN
        __self__.is_ptr = pulumi.runtime.UNKNOWN
        __self__.record_count = pulumi.runtime.UNKNOWN
        """
        The count of the Private Zone Record.
        """
        __self__.update_time = pulumi.runtime.UNKNOWN

        super(Zone, __self__).__init__(
            'alicloud:pvtz/zone:Zone',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'creationTime' in outs:
            self.creation_time = outs['creationTime']
        if 'isPtr' in outs:
            self.is_ptr = outs['isPtr']
        if 'name' in outs:
            self.name = outs['name']
        if 'recordCount' in outs:
            self.record_count = outs['recordCount']
        if 'remark' in outs:
            self.remark = outs['remark']
        if 'updateTime' in outs:
            self.update_time = outs['updateTime']
