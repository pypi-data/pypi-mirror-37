# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class BandwidthLimit(pulumi.CustomResource):
    """
    Provides a CEN cross-regional interconnection bandwidth resource. To connect networks in different regions, you must set cross-region interconnection bandwidth after buying a bandwidth package. The total bandwidth set for all the interconnected regions of a bandwidth package cannot exceed the bandwidth of the bandwidth package. By default, 1 Kbps bandwidth is provided for connectivity test. To run normal business, you must buy a bandwidth package and set a proper interconnection bandwidth.
    
    For example, a CEN instance is bound to a bandwidth package of 20 Mbps and  the interconnection areas are Mainland China and North America. You can set the cross-region interconnection bandwidth between US West 1 and China East 1, China East 2, China South 1, and so on. However, the total bandwidth set for all the interconnected regions cannot exceed 20  Mbps.
    
    For information about CEN and how to use it, see [Cross-region interconnection bandwidth](https://www.alibabacloud.com/help/doc-detail/65983.htm)
    """
    def __init__(__self__, __name__, __opts__=None, bandwidth_limit=None, instance_id=None, region_ids=None):
        """Create a BandwidthLimit resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not bandwidth_limit:
            raise TypeError('Missing required property bandwidth_limit')
        elif not isinstance(bandwidth_limit, int):
            raise TypeError('Expected property bandwidth_limit to be a int')
        __self__.bandwidth_limit = bandwidth_limit
        """
        The bandwidth configured for the interconnected regions communication.
        """
        __props__['bandwidthLimit'] = bandwidth_limit

        if not instance_id:
            raise TypeError('Missing required property instance_id')
        elif not isinstance(instance_id, basestring):
            raise TypeError('Expected property instance_id to be a basestring')
        __self__.instance_id = instance_id
        """
        The ID of the CEN.
        """
        __props__['instanceId'] = instance_id

        if not region_ids:
            raise TypeError('Missing required property region_ids')
        elif not isinstance(region_ids, list):
            raise TypeError('Expected property region_ids to be a list')
        __self__.region_ids = region_ids
        """
        List of the two regions to interconnect. 
        """
        __props__['regionIds'] = region_ids

        super(BandwidthLimit, __self__).__init__(
            'alicloud:cen/bandwidthLimit:BandwidthLimit',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'bandwidthLimit' in outs:
            self.bandwidth_limit = outs['bandwidthLimit']
        if 'instanceId' in outs:
            self.instance_id = outs['instanceId']
        if 'regionIds' in outs:
            self.region_ids = outs['regionIds']
