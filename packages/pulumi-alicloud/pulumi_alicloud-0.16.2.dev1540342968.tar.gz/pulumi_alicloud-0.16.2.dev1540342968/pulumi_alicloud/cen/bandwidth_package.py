# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class BandwidthPackage(pulumi.CustomResource):
    """
    Provides a CEN bandwidth package resource. The CEN bandwidth package is an abstracted object that includes an interconnection bandwidth and interconnection areas. To buy a bandwidth package, you must specify the areas to connect. An area consists of one or more Alibaba Cloud regions. The areas in CEN include Mainland China, Asia Pacific, North America, and Europe.
    
    For information about CEN and how to use it, see [Manage bandwidth packages](https://www.alibabacloud.com/help/doc-detail/65982.htm).
    """
    def __init__(__self__, __name__, __opts__=None, bandwidth=None, charge_type=None, description=None, geographic_region_ids=None, name=None, period=None):
        """Create a BandwidthPackage resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not bandwidth:
            raise TypeError('Missing required property bandwidth')
        elif not isinstance(bandwidth, int):
            raise TypeError('Expected property bandwidth to be a int')
        __self__.bandwidth = bandwidth
        """
        The bandwidth in Mbps of the bandwidth package. Cannot be less than 1Mbps.
        """
        __props__['bandwidth'] = bandwidth

        if charge_type and not isinstance(charge_type, basestring):
            raise TypeError('Expected property charge_type to be a basestring')
        __self__.charge_type = charge_type
        """
        The billing method. Valid value: PostPaid | PrePaid. Default to PostPaid. If set to PrePaid, the bandwidth package can't be deleted before expired time.
        """
        __props__['chargeType'] = charge_type

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        The description of the bandwidth package. Default to null.
        """
        __props__['description'] = description

        if not geographic_region_ids:
            raise TypeError('Missing required property geographic_region_ids')
        elif not isinstance(geographic_region_ids, list):
            raise TypeError('Expected property geographic_region_ids to be a list')
        __self__.geographic_region_ids = geographic_region_ids
        """
        List of the two areas to connect. Valid value: China | North-America | Asia-Pacific | Europe | Middle-East.
        """
        __props__['geographicRegionIds'] = geographic_region_ids

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the bandwidth package. Defaults to null.
        """
        __props__['name'] = name

        if period and not isinstance(period, int):
            raise TypeError('Expected property period to be a int')
        __self__.period = period
        """
        The purchase period in month. Valid value: 1, 2, 3, 6, 12. Default to 1.
        """
        __props__['period'] = period

        __self__.expired_time = pulumi.runtime.UNKNOWN
        """
        The time of the bandwidth package to expire.
        """
        __self__.status = pulumi.runtime.UNKNOWN
        """
        The status of the bandwidth, including "InUse" and "Idle".
        """

        super(BandwidthPackage, __self__).__init__(
            'alicloud:cen/bandwidthPackage:BandwidthPackage',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'bandwidth' in outs:
            self.bandwidth = outs['bandwidth']
        if 'chargeType' in outs:
            self.charge_type = outs['chargeType']
        if 'description' in outs:
            self.description = outs['description']
        if 'expiredTime' in outs:
            self.expired_time = outs['expiredTime']
        if 'geographicRegionIds' in outs:
            self.geographic_region_ids = outs['geographicRegionIds']
        if 'name' in outs:
            self.name = outs['name']
        if 'period' in outs:
            self.period = outs['period']
        if 'status' in outs:
            self.status = outs['status']
