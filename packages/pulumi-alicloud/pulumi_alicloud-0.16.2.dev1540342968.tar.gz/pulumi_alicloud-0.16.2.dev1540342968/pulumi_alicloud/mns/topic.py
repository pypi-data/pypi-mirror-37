# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Topic(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, logging_enabled=None, maximum_message_size=None, name=None):
        """Create a Topic resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if logging_enabled and not isinstance(logging_enabled, bool):
            raise TypeError('Expected property logging_enabled to be a bool')
        __self__.logging_enabled = logging_enabled
        """
        Is logging enabled? true or false. Default value to false.
        """
        __props__['loggingEnabled'] = logging_enabled

        if maximum_message_size and not isinstance(maximum_message_size, int):
            raise TypeError('Expected property maximum_message_size to be a int')
        __self__.maximum_message_size = maximum_message_size
        """
        This indicates the maximum length, in bytes, of any message body sent to the topic. Valid value range: 1024-65536, i.e., 1K to 64K. Default value to 65536.
        """
        __props__['maximumMessageSize'] = maximum_message_size

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Two topics on a single account in the same region cannot have the same name. A topic name must start with an English letter or a digit, and can contain English letters, digits, and hyphens, with the length not exceeding 256 characters.
        """
        __props__['name'] = name

        super(Topic, __self__).__init__(
            'alicloud:mns/topic:Topic',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'loggingEnabled' in outs:
            self.logging_enabled = outs['loggingEnabled']
        if 'maximumMessageSize' in outs:
            self.maximum_message_size = outs['maximumMessageSize']
        if 'name' in outs:
            self.name = outs['name']
