# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Topic(pulumi.CustomResource):
    """
    The topic is the basic unit of Datahub data source and is used to define one kind of data or stream. It contains a set of subscriptions. You can manage the datahub source of an application by using topics. [Refer to details](https://help.aliyun.com/document_detail/47440.html).
    """
    def __init__(__self__, __name__, __opts__=None, comment=None, life_cycle=None, name=None, project_name=None, record_schema=None, record_type=None, shard_count=None):
        """Create a Topic resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if comment and not isinstance(comment, basestring):
            raise TypeError('Expected property comment to be a basestring')
        __self__.comment = comment
        """
        Comment of the datahub topic. It cannot be longer than 255 characters.
        """
        __props__['comment'] = comment

        if life_cycle and not isinstance(life_cycle, int):
            raise TypeError('Expected property life_cycle to be a int')
        __self__.life_cycle = life_cycle
        """
        How many days this topic lives. The permitted range of values is [1, 7]. The default value is 3.
        """
        __props__['lifeCycle'] = life_cycle

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the datahub topic. Its length is limited to 1-128 and only characters such as letters, digits and '_' are allowed. It is case-insensitive.
        """
        __props__['name'] = name

        if not project_name:
            raise TypeError('Missing required property project_name')
        elif not isinstance(project_name, basestring):
            raise TypeError('Expected property project_name to be a basestring')
        __self__.project_name = project_name
        """
        The name of the datahub project that this topic belongs to. It is case-insensitive.
        """
        __props__['projectName'] = project_name

        if record_schema and not isinstance(record_schema, dict):
            raise TypeError('Expected property record_schema to be a dict')
        __self__.record_schema = record_schema
        """
        Schema of this topic, required only for TUPLE topic. Supported data types (case-insensitive) are:
        - BIGINT
        - STRING
        - BOOLEAN
        - DOUBLE
        - TIMESTAMP
        """
        __props__['recordSchema'] = record_schema

        if record_type and not isinstance(record_type, basestring):
            raise TypeError('Expected property record_type to be a basestring')
        __self__.record_type = record_type
        """
        The type of this topic. Its value must be one of {BLOB, TUPLE}. For BLOB topic, data will be organized as binary and encoded by BASE64. For TUPLE topic, data has fixed schema. The default value is "TUPLE" with a schema {STRING}.
        """
        __props__['recordType'] = record_type

        if shard_count and not isinstance(shard_count, int):
            raise TypeError('Expected property shard_count to be a int')
        __self__.shard_count = shard_count
        """
        The number of shards this topic contains. The permitted range of values is [1, 10]. The default value is 1.
        """
        __props__['shardCount'] = shard_count

        __self__.create_time = pulumi.runtime.UNKNOWN
        """
        Create time of the datahub topic. It is a human-readable string rather than 64-bits UTC.
        """
        __self__.last_modify_time = pulumi.runtime.UNKNOWN
        """
        Last modify time of the datahub topic. It is the same as *create_time* at the beginning. It is also a human-readable string rather than 64-bits UTC.
        """

        super(Topic, __self__).__init__(
            'alicloud:datahub/topic:Topic',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'comment' in outs:
            self.comment = outs['comment']
        if 'createTime' in outs:
            self.create_time = outs['createTime']
        if 'lastModifyTime' in outs:
            self.last_modify_time = outs['lastModifyTime']
        if 'lifeCycle' in outs:
            self.life_cycle = outs['lifeCycle']
        if 'name' in outs:
            self.name = outs['name']
        if 'projectName' in outs:
            self.project_name = outs['projectName']
        if 'recordSchema' in outs:
            self.record_schema = outs['recordSchema']
        if 'recordType' in outs:
            self.record_type = outs['recordType']
        if 'shardCount' in outs:
            self.shard_count = outs['shardCount']
