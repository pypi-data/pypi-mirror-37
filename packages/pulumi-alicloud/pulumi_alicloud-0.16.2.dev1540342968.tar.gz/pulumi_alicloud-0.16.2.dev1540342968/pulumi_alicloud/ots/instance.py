# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Instance(pulumi.CustomResource):
    """
    This resource will help you to manager a [Table Store](https://www.alibabacloud.com/help/doc-detail/27280.htm) Instance.
    It is foundation of creating data table.
    """
    def __init__(__self__, __name__, __opts__=None, accessed_by=None, description=None, instance_type=None, name=None, tags=None):
        """Create a Instance resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if accessed_by and not isinstance(accessed_by, basestring):
            raise TypeError('Expected property accessed_by to be a basestring')
        __self__.accessed_by = accessed_by
        """
        The network limitation of accessing instance. Valid values:
        """
        __props__['accessedBy'] = accessed_by

        if not description:
            raise TypeError('Missing required property description')
        elif not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        The description of the instance.
        """
        __props__['description'] = description

        if instance_type and not isinstance(instance_type, basestring):
            raise TypeError('Expected property instance_type to be a basestring')
        __self__.instance_type = instance_type
        """
        The type of instance. Valid values are "Capacity" and "HighPerformance". Default to "HighPerformance".
        """
        __props__['instanceType'] = instance_type

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the instance.
        """
        __props__['name'] = name

        if tags and not isinstance(tags, dict):
            raise TypeError('Expected property tags to be a dict')
        __self__.tags = tags
        """
        A mapping of tags to assign to the instance.
        """
        __props__['tags'] = tags

        super(Instance, __self__).__init__(
            'alicloud:ots/instance:Instance',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'accessedBy' in outs:
            self.accessed_by = outs['accessedBy']
        if 'description' in outs:
            self.description = outs['description']
        if 'instanceType' in outs:
            self.instance_type = outs['instanceType']
        if 'name' in outs:
            self.name = outs['name']
        if 'tags' in outs:
            self.tags = outs['tags']
