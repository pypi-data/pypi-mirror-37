# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Function(pulumi.CustomResource):
    """
    Provides a Alicloud Function Compute Function resource. Function allows you to trigger execution of code in response to events in Alibaba Cloud. The Function itself includes source code and runtime configuration.
     For information about Service and how to use it, see [What is Function Compute](https://www.alibabacloud.com/help/doc-detail/52895.htm).
    
    -> **NOTE:** The resource requires a provider field 'account_id'. [See account_id](https://www.terraform.io/docs/providers/alicloud/index.html#account_id).
    """
    def __init__(__self__, __name__, __opts__=None, description=None, filename=None, handler=None, memory_size=None, name=None, name_prefix=None, oss_bucket=None, oss_key=None, runtime=None, service=None, timeout=None):
        """Create a Function resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        The Function Compute function description.
        """
        __props__['description'] = description

        if filename and not isinstance(filename, basestring):
            raise TypeError('Expected property filename to be a basestring')
        __self__.filename = filename
        """
        The path to the function's deployment package within the local filesystem. It is conflict with the `oss_`-prefixed options.
        """
        __props__['filename'] = filename

        if not handler:
            raise TypeError('Missing required property handler')
        elif not isinstance(handler, basestring):
            raise TypeError('Expected property handler to be a basestring')
        __self__.handler = handler
        """
        The function [entry point](https://www.alibabacloud.com/help/doc-detail/62213.htm) in your code.
        """
        __props__['handler'] = handler

        if memory_size and not isinstance(memory_size, int):
            raise TypeError('Expected property memory_size to be a int')
        __self__.memory_size = memory_size
        """
        Amount of memory in MB your Function can use at runtime. Defaults to `128`. Limits to [128, 3072].
        """
        __props__['memorySize'] = memory_size

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The Function Compute function name. It is the only in one service and is conflict with "name_prefix".
        """
        __props__['name'] = name

        if name_prefix and not isinstance(name_prefix, basestring):
            raise TypeError('Expected property name_prefix to be a basestring')
        __self__.name_prefix = name_prefix
        """
        Setting a prefix to get a only function name. It is conflict with "name".
        """
        __props__['namePrefix'] = name_prefix

        if oss_bucket and not isinstance(oss_bucket, basestring):
            raise TypeError('Expected property oss_bucket to be a basestring')
        __self__.oss_bucket = oss_bucket
        """
        The OSS bucket location containing the function's deployment package. Conflicts with `filename`. This bucket must reside in the same Alibaba Cloud region where you are creating the function.
        """
        __props__['ossBucket'] = oss_bucket

        if oss_key and not isinstance(oss_key, basestring):
            raise TypeError('Expected property oss_key to be a basestring')
        __self__.oss_key = oss_key
        """
        The OSS key of an object containing the function's deployment package. Conflicts with `filename`.
        """
        __props__['ossKey'] = oss_key

        if not runtime:
            raise TypeError('Missing required property runtime')
        elif not isinstance(runtime, basestring):
            raise TypeError('Expected property runtime to be a basestring')
        __self__.runtime = runtime
        """
        See [Runtimes][https://www.alibabacloud.com/help/doc-detail/52077.htm] for valid values.
        """
        __props__['runtime'] = runtime

        if not service:
            raise TypeError('Missing required property service')
        elif not isinstance(service, basestring):
            raise TypeError('Expected property service to be a basestring')
        __self__.service = service
        """
        The Function Compute service name.
        """
        __props__['service'] = service

        if timeout and not isinstance(timeout, int):
            raise TypeError('Expected property timeout to be a int')
        __self__.timeout = timeout
        """
        The amount of time your Function has to run in seconds.
        """
        __props__['timeout'] = timeout

        __self__.last_modified = pulumi.runtime.UNKNOWN
        """
        The date this resource was last modified.
        """

        super(Function, __self__).__init__(
            'alicloud:fc/function:Function',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'description' in outs:
            self.description = outs['description']
        if 'filename' in outs:
            self.filename = outs['filename']
        if 'handler' in outs:
            self.handler = outs['handler']
        if 'lastModified' in outs:
            self.last_modified = outs['lastModified']
        if 'memorySize' in outs:
            self.memory_size = outs['memorySize']
        if 'name' in outs:
            self.name = outs['name']
        if 'namePrefix' in outs:
            self.name_prefix = outs['namePrefix']
        if 'ossBucket' in outs:
            self.oss_bucket = outs['ossBucket']
        if 'ossKey' in outs:
            self.oss_key = outs['ossKey']
        if 'runtime' in outs:
            self.runtime = outs['runtime']
        if 'service' in outs:
            self.service = outs['service']
        if 'timeout' in outs:
            self.timeout = outs['timeout']
