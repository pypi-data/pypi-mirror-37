# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class StoreIndex(pulumi.CustomResource):
    """
    Log Service provides the LogSearch/Analytics function to query and analyze large amounts of logs in real time.
    You can use this function by enabling the index and field statistics. [Refer to details](https://www.alibabacloud.com/help/doc-detail/43772.htm)
    """
    def __init__(__self__, __name__, __opts__=None, field_searches=None, full_text=None, logstore=None, project=None):
        """Create a StoreIndex resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if field_searches and not isinstance(field_searches, list):
            raise TypeError('Expected property field_searches to be a list')
        __self__.field_searches = field_searches
        """
        List configurations of field search index. Valid item as follows:
        """
        __props__['fieldSearches'] = field_searches

        if full_text and not isinstance(full_text, dict):
            raise TypeError('Expected property full_text to be a dict')
        __self__.full_text = full_text
        """
        The configuration of full text index. Valid item as follows:
        """
        __props__['fullText'] = full_text

        if not logstore:
            raise TypeError('Missing required property logstore')
        elif not isinstance(logstore, basestring):
            raise TypeError('Expected property logstore to be a basestring')
        __self__.logstore = logstore
        """
        The log store name to the query index belongs.
        """
        __props__['logstore'] = logstore

        if not project:
            raise TypeError('Missing required property project')
        elif not isinstance(project, basestring):
            raise TypeError('Expected property project to be a basestring')
        __self__.project = project
        """
        The project name to the log store belongs.
        """
        __props__['project'] = project

        super(StoreIndex, __self__).__init__(
            'alicloud:log/storeIndex:StoreIndex',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'fieldSearches' in outs:
            self.field_searches = outs['fieldSearches']
        if 'fullText' in outs:
            self.full_text = outs['fullText']
        if 'logstore' in outs:
            self.logstore = outs['logstore']
        if 'project' in outs:
            self.project = outs['project']
