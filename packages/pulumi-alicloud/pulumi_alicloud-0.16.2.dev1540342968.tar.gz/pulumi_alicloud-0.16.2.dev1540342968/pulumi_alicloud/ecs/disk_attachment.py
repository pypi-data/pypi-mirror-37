# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class DiskAttachment(pulumi.CustomResource):
    """
    Provides an Alicloud ECS Disk Attachment as a resource, to attach and detach disks from ECS Instances.
    """
    def __init__(__self__, __name__, __opts__=None, device_name=None, disk_id=None, instance_id=None):
        """Create a DiskAttachment resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if device_name and not isinstance(device_name, basestring):
            raise TypeError('Expected property device_name to be a basestring')
        __self__.device_name = device_name
        """
        The device name has been deprecated, and when attaching disk, it will be allocated automatically by system according to default order from /dev/xvdb to /dev/xvdz.
        """
        __props__['deviceName'] = device_name

        if disk_id and not isinstance(disk_id, basestring):
            raise TypeError('Expected property disk_id to be a basestring')
        __self__.disk_id = disk_id
        """
        ID of the Disk to be attached.
        """
        __props__['diskId'] = disk_id

        if instance_id and not isinstance(instance_id, basestring):
            raise TypeError('Expected property instance_id to be a basestring')
        __self__.instance_id = instance_id
        """
        ID of the Instance to attach to.
        """
        __props__['instanceId'] = instance_id

        super(DiskAttachment, __self__).__init__(
            'alicloud:ecs/diskAttachment:DiskAttachment',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'deviceName' in outs:
            self.device_name = outs['deviceName']
        if 'diskId' in outs:
            self.disk_id = outs['diskId']
        if 'instanceId' in outs:
            self.instance_id = outs['instanceId']
