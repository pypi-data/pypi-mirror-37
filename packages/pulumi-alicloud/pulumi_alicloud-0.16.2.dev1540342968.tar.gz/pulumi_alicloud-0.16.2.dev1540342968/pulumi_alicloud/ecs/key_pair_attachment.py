# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class KeyPairAttachment(pulumi.CustomResource):
    """
    Provides a key pair attachment resource to bind key pair for several ECS instances.
    
    -> **NOTE:** After the key pair is attached with sone instances, there instances must be rebooted to make the key pair affect.
    """
    def __init__(__self__, __name__, __opts__=None, force=None, instance_ids=None, key_name=None):
        """Create a KeyPairAttachment resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if force and not isinstance(force, bool):
            raise TypeError('Expected property force to be a bool')
        __self__.force = force
        """
        Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
        """
        __props__['force'] = force

        if not instance_ids:
            raise TypeError('Missing required property instance_ids')
        elif not isinstance(instance_ids, list):
            raise TypeError('Expected property instance_ids to be a list')
        __self__.instance_ids = instance_ids
        """
        The list of ECS instance's IDs.
        """
        __props__['instanceIds'] = instance_ids

        if not key_name:
            raise TypeError('Missing required property key_name')
        elif not isinstance(key_name, basestring):
            raise TypeError('Expected property key_name to be a basestring')
        __self__.key_name = key_name
        """
        The name of key pair used to bind.
        """
        __props__['keyName'] = key_name

        super(KeyPairAttachment, __self__).__init__(
            'alicloud:ecs/keyPairAttachment:KeyPairAttachment',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'force' in outs:
            self.force = outs['force']
        if 'instanceIds' in outs:
            self.instance_ids = outs['instanceIds']
        if 'keyName' in outs:
            self.key_name = outs['keyName']
