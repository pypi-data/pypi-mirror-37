# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class ForwardEntry(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, external_ip=None, external_port=None, forward_table_id=None, internal_ip=None, internal_port=None, ip_protocol=None):
        """Create a ForwardEntry resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not external_ip:
            raise TypeError('Missing required property external_ip')
        elif not isinstance(external_ip, basestring):
            raise TypeError('Expected property external_ip to be a basestring')
        __self__.external_ip = external_ip
        __props__['externalIp'] = external_ip

        if not external_port:
            raise TypeError('Missing required property external_port')
        elif not isinstance(external_port, basestring):
            raise TypeError('Expected property external_port to be a basestring')
        __self__.external_port = external_port
        __props__['externalPort'] = external_port

        if not forward_table_id:
            raise TypeError('Missing required property forward_table_id')
        elif not isinstance(forward_table_id, basestring):
            raise TypeError('Expected property forward_table_id to be a basestring')
        __self__.forward_table_id = forward_table_id
        __props__['forwardTableId'] = forward_table_id

        if not internal_ip:
            raise TypeError('Missing required property internal_ip')
        elif not isinstance(internal_ip, basestring):
            raise TypeError('Expected property internal_ip to be a basestring')
        __self__.internal_ip = internal_ip
        __props__['internalIp'] = internal_ip

        if not internal_port:
            raise TypeError('Missing required property internal_port')
        elif not isinstance(internal_port, basestring):
            raise TypeError('Expected property internal_port to be a basestring')
        __self__.internal_port = internal_port
        __props__['internalPort'] = internal_port

        if not ip_protocol:
            raise TypeError('Missing required property ip_protocol')
        elif not isinstance(ip_protocol, basestring):
            raise TypeError('Expected property ip_protocol to be a basestring')
        __self__.ip_protocol = ip_protocol
        __props__['ipProtocol'] = ip_protocol

        super(ForwardEntry, __self__).__init__(
            'alicloud:vpc/forwardEntry:ForwardEntry',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'externalIp' in outs:
            self.external_ip = outs['externalIp']
        if 'externalPort' in outs:
            self.external_port = outs['externalPort']
        if 'forwardTableId' in outs:
            self.forward_table_id = outs['forwardTableId']
        if 'internalIp' in outs:
            self.internal_ip = outs['internalIp']
        if 'internalPort' in outs:
            self.internal_port = outs['internalPort']
        if 'ipProtocol' in outs:
            self.ip_protocol = outs['ipProtocol']
