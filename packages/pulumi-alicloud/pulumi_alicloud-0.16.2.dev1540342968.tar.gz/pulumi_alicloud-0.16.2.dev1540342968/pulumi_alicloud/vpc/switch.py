# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Switch(pulumi.CustomResource):
    """
    Provides a VPC switch resource.
    """
    def __init__(__self__, __name__, __opts__=None, availability_zone=None, cidr_block=None, description=None, name=None, vpc_id=None):
        """Create a Switch resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not availability_zone:
            raise TypeError('Missing required property availability_zone')
        elif not isinstance(availability_zone, basestring):
            raise TypeError('Expected property availability_zone to be a basestring')
        __self__.availability_zone = availability_zone
        """
        The AZ for the switch.
        """
        __props__['availabilityZone'] = availability_zone

        if not cidr_block:
            raise TypeError('Missing required property cidr_block')
        elif not isinstance(cidr_block, basestring):
            raise TypeError('Expected property cidr_block to be a basestring')
        __self__.cidr_block = cidr_block
        """
        The CIDR block for the switch.
        """
        __props__['cidrBlock'] = cidr_block

        if description and not isinstance(description, basestring):
            raise TypeError('Expected property description to be a basestring')
        __self__.description = description
        """
        The switch description. Defaults to null.
        """
        __props__['description'] = description

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the switch. Defaults to null.
        """
        __props__['name'] = name

        if not vpc_id:
            raise TypeError('Missing required property vpc_id')
        elif not isinstance(vpc_id, basestring):
            raise TypeError('Expected property vpc_id to be a basestring')
        __self__.vpc_id = vpc_id
        """
        The VPC ID.
        """
        __props__['vpcId'] = vpc_id

        super(Switch, __self__).__init__(
            'alicloud:vpc/switch:Switch',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'availabilityZone' in outs:
            self.availability_zone = outs['availabilityZone']
        if 'cidrBlock' in outs:
            self.cidr_block = outs['cidrBlock']
        if 'description' in outs:
            self.description = outs['description']
        if 'name' in outs:
            self.name = outs['name']
        if 'vpcId' in outs:
            self.vpc_id = outs['vpcId']
