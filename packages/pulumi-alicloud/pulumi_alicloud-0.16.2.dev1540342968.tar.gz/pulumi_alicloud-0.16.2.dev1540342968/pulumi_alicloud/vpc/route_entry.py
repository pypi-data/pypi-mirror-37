# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class RouteEntry(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, destination_cidrblock=None, nexthop_id=None, nexthop_type=None, route_table_id=None, router_id=None):
        """Create a RouteEntry resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if destination_cidrblock and not isinstance(destination_cidrblock, basestring):
            raise TypeError('Expected property destination_cidrblock to be a basestring')
        __self__.destination_cidrblock = destination_cidrblock
        __props__['destinationCidrblock'] = destination_cidrblock

        if nexthop_id and not isinstance(nexthop_id, basestring):
            raise TypeError('Expected property nexthop_id to be a basestring')
        __self__.nexthop_id = nexthop_id
        __props__['nexthopId'] = nexthop_id

        if nexthop_type and not isinstance(nexthop_type, basestring):
            raise TypeError('Expected property nexthop_type to be a basestring')
        __self__.nexthop_type = nexthop_type
        __props__['nexthopType'] = nexthop_type

        if not route_table_id:
            raise TypeError('Missing required property route_table_id')
        elif not isinstance(route_table_id, basestring):
            raise TypeError('Expected property route_table_id to be a basestring')
        __self__.route_table_id = route_table_id
        __props__['routeTableId'] = route_table_id

        if router_id and not isinstance(router_id, basestring):
            raise TypeError('Expected property router_id to be a basestring')
        __self__.router_id = router_id
        __props__['routerId'] = router_id

        super(RouteEntry, __self__).__init__(
            'alicloud:vpc/routeEntry:RouteEntry',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'destinationCidrblock' in outs:
            self.destination_cidrblock = outs['destinationCidrblock']
        if 'nexthopId' in outs:
            self.nexthop_id = outs['nexthopId']
        if 'nexthopType' in outs:
            self.nexthop_type = outs['nexthopType']
        if 'routeTableId' in outs:
            self.route_table_id = outs['routeTableId']
        if 'routerId' in outs:
            self.router_id = outs['routerId']
