# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class UserPolicyAttachment(pulumi.CustomResource):
    """
    Provides a RAM User Policy attachment resource. 
    """
    def __init__(__self__, __name__, __opts__=None, policy_name=None, policy_type=None, user_name=None):
        """Create a UserPolicyAttachment resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not policy_name:
            raise TypeError('Missing required property policy_name')
        elif not isinstance(policy_name, basestring):
            raise TypeError('Expected property policy_name to be a basestring')
        __self__.policy_name = policy_name
        """
        Name of the RAM policy. This name can have a string of 1 to 128 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
        """
        __props__['policyName'] = policy_name

        if not policy_type:
            raise TypeError('Missing required property policy_type')
        elif not isinstance(policy_type, basestring):
            raise TypeError('Expected property policy_type to be a basestring')
        __self__.policy_type = policy_type
        """
        Type of the RAM policy. It must be `Custom` or `System`.
        """
        __props__['policyType'] = policy_type

        if not user_name:
            raise TypeError('Missing required property user_name')
        elif not isinstance(user_name, basestring):
            raise TypeError('Expected property user_name to be a basestring')
        __self__.user_name = user_name
        """
        Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
        """
        __props__['userName'] = user_name

        super(UserPolicyAttachment, __self__).__init__(
            'alicloud:ram/userPolicyAttachment:UserPolicyAttachment',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'policyName' in outs:
            self.policy_name = outs['policyName']
        if 'policyType' in outs:
            self.policy_type = outs['policyType']
        if 'userName' in outs:
            self.user_name = outs['userName']
