# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Group(pulumi.CustomResource):
    """
    Provides a RAM Group resource.
    
    ~> **NOTE:** When you want to destroy this resource forcefully(means remove all the relationships associated with it automatically and then destroy it) without set `force`  with `true` at beginning, you need add `force = true` to configuration file and run `terraform plan`, then you can delete resource forcefully. 
    """
    def __init__(__self__, __name__, __opts__=None, comments=None, force=None, name=None):
        """Create a Group resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if comments and not isinstance(comments, basestring):
            raise TypeError('Expected property comments to be a basestring')
        __self__.comments = comments
        """
        Comment of the RAM group. This parameter can have a string of 1 to 128 characters.
        """
        __props__['comments'] = comments

        if force and not isinstance(force, bool):
            raise TypeError('Expected property force to be a bool')
        __self__.force = force
        """
        This parameter is used for resource destroy. Default value is `false`.
        """
        __props__['force'] = force

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
        """
        __props__['name'] = name

        super(Group, __self__).__init__(
            'alicloud:ram/group:Group',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'comments' in outs:
            self.comments = outs['comments']
        if 'force' in outs:
            self.force = outs['force']
        if 'name' in outs:
            self.name = outs['name']
