# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class LoadBalancer(pulumi.CustomResource):
    """
    Provides an Application Load Balancer resource.
    
    ~> **NOTE:** Resource `alicloud_slb` has deprecated 'listener' filed from terraform-alicloud-provider [version 1.3.0](https://github.com/alibaba/terraform-provider/releases/tag/V1.3.0) . You can create new listeners for Load Balancer by resource `alicloud_slb_listener`.
    If you have had several listeners in one load balancer, you can import them via the specified listener ID. In the `alicloud_slb_listener`, listener ID is consist of load balancer ID and frontend port, and its format is `<load balancer ID>:<frontend port>`, like "lb-hr2fwnf32t:8080".
    
    ~> **NOTE:** At present, to avoid some unnecessary regulation confusion, SLB can not support alicloud international account to create "paybybandwidth" instance.
    """
    def __init__(__self__, __name__, __opts__=None, bandwidth=None, instances=None, internet=None, internet_charge_type=None, listeners=None, name=None, specification=None, vswitch_id=None):
        """Create a LoadBalancer resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if bandwidth and not isinstance(bandwidth, int):
            raise TypeError('Expected property bandwidth to be a int')
        __self__.bandwidth = bandwidth
        """
        Valid
        value is between 1 and 1000, If argument "internet_charge_type" is "paybytraffic", then this value will be ignore.
        """
        __props__['bandwidth'] = bandwidth

        if instances and not isinstance(instances, list):
            raise TypeError('Expected property instances to be a list')
        __self__.instances = instances
        __props__['instances'] = instances

        if internet and not isinstance(internet, bool):
            raise TypeError('Expected property internet to be a bool')
        __self__.internet = internet
        """
        If true, the SLB addressType will be internet, false will be intranet, Default is false. If load balancer launched in VPC, this value must be "false".
        """
        __props__['internet'] = internet

        if internet_charge_type and not isinstance(internet_charge_type, basestring):
            raise TypeError('Expected property internet_charge_type to be a basestring')
        __self__.internet_charge_type = internet_charge_type
        """
        Valid
        values are `PayByBandwidth`, `PayByTraffic`. If this value is "PayByBandwidth", then argument "internet" must be "true". Default is "PayByTraffic". If load balancer launched in VPC, this value must be "PayByTraffic".
        Before version 1.10.1, the valid values are "paybybandwidth" and "paybytraffic".
        """
        __props__['internetChargeType'] = internet_charge_type

        if listeners and not isinstance(listeners, list):
            raise TypeError('Expected property listeners to be a list')
        __self__.listeners = listeners
        """
        The field has been deprecated from terraform-alicloud-provider [version 1.3.0](https://github.com/alibaba/terraform-provider/releases/tag/V1.3.0), and use resource `alicloud_slb_listener` to replace.
        """
        __props__['listeners'] = listeners

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the SLB. This name must be unique within your AliCloud account, can have a maximum of 80 characters,
        must contain only alphanumeric characters or hyphens, such as "-","/",".","_", and must not begin or end with a hyphen. If not specified,
        Terraform will autogenerate a name beginning with `tf-lb`.
        """
        __props__['name'] = name

        if specification and not isinstance(specification, basestring):
            raise TypeError('Expected property specification to be a basestring')
        __self__.specification = specification
        """
        The specification of the Server Load Balancer instance. Default to empty string indicating it is "Shared-Performance" instance.
        Launching "[Performance-guaranteed](https://www.alibabacloud.com/help/doc-detail/27657.htm)" instance, it is must be specified and it valid values are: "slb.s1.small", "slb.s2.small", "slb.s2.medium",
        "slb.s3.small", "slb.s3.medium" and "slb.s3.large".
        """
        __props__['specification'] = specification

        if vswitch_id and not isinstance(vswitch_id, basestring):
            raise TypeError('Expected property vswitch_id to be a basestring')
        __self__.vswitch_id = vswitch_id
        """
        The VSwitch ID to launch in.
        """
        __props__['vswitchId'] = vswitch_id

        __self__.address = pulumi.runtime.UNKNOWN
        """
        The IP address of the load balancer.
        """

        super(LoadBalancer, __self__).__init__(
            'alicloud:slb/loadBalancer:LoadBalancer',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'address' in outs:
            self.address = outs['address']
        if 'bandwidth' in outs:
            self.bandwidth = outs['bandwidth']
        if 'instances' in outs:
            self.instances = outs['instances']
        if 'internet' in outs:
            self.internet = outs['internet']
        if 'internetChargeType' in outs:
            self.internet_charge_type = outs['internetChargeType']
        if 'listeners' in outs:
            self.listeners = outs['listeners']
        if 'name' in outs:
            self.name = outs['name']
        if 'specification' in outs:
            self.specification = outs['specification']
        if 'vswitchId' in outs:
            self.vswitch_id = outs['vswitchId']
