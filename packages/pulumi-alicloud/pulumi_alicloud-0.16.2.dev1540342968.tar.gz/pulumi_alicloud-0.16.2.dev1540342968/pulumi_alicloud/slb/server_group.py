# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class ServerGroup(pulumi.CustomResource):
    """
    A virtual server group contains several ECS instances. The virtual server group can help you to define multiple listening dimension,
    and to meet the personalized requirements of domain name and URL forwarding.
    
    ~> **NOTE:** One ECS instance can be added into multiple virtual server groups.
    
    ~> **NOTE:** One virtual server group can be attached with multiple listeners in one load balancer.
    
    ~> **NOTE:** One Classic and Internet load balancer, its virtual server group can add Classic and VPC ECS instances.
    
    ~> **NOTE:** One Classic and Intranet load balancer, its virtual server group can only add Classic ECS instances.
    
    ~> **NOTE:** One VPC load balancer, its virtual server group can only add the same VPC ECS instances.
    """
    def __init__(__self__, __name__, __opts__=None, load_balancer_id=None, name=None, servers=None):
        """Create a ServerGroup resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not load_balancer_id:
            raise TypeError('Missing required property load_balancer_id')
        elif not isinstance(load_balancer_id, basestring):
            raise TypeError('Expected property load_balancer_id to be a basestring')
        __self__.load_balancer_id = load_balancer_id
        """
        The Load Balancer ID which is used to launch a new virtual server group.
        """
        __props__['loadBalancerId'] = load_balancer_id

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Name of the virtual server group. Our plugin provides a default name: "tf-server-group".
        """
        __props__['name'] = name

        if servers and not isinstance(servers, list):
            raise TypeError('Expected property servers to be a list')
        __self__.servers = servers
        """
        A list of ECS instances to be added. At most 20 ECS instances can be supported in one resource. It contains three sub-fields as `Block server` follows.
        """
        __props__['servers'] = servers

        super(ServerGroup, __self__).__init__(
            'alicloud:slb/serverGroup:ServerGroup',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'loadBalancerId' in outs:
            self.load_balancer_id = outs['loadBalancerId']
        if 'name' in outs:
            self.name = outs['name']
        if 'servers' in outs:
            self.servers = outs['servers']
