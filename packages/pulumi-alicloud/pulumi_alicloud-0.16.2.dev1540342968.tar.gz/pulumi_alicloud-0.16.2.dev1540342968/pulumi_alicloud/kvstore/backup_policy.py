# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class BackupPolicy(pulumi.CustomResource):
    """
    Provides a backup policy for ApsaraDB Redis / Memcache instance resource. 
    """
    def __init__(__self__, __name__, __opts__=None, backup_periods=None, backup_time=None, instance_id=None):
        """Create a BackupPolicy resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if backup_periods and not isinstance(backup_periods, list):
            raise TypeError('Expected property backup_periods to be a list')
        __self__.backup_periods = backup_periods
        __props__['backupPeriods'] = backup_periods

        if backup_time and not isinstance(backup_time, basestring):
            raise TypeError('Expected property backup_time to be a basestring')
        __self__.backup_time = backup_time
        __props__['backupTime'] = backup_time

        if not instance_id:
            raise TypeError('Missing required property instance_id')
        elif not isinstance(instance_id, basestring):
            raise TypeError('Expected property instance_id to be a basestring')
        __self__.instance_id = instance_id
        """
        The id of ApsaraDB for Redis or Memcache intance.
        * `preferred_backup_time`- (Required) Backup time, in the format of HH:mmZ- HH:mm Z
        """
        __props__['instanceId'] = instance_id

        super(BackupPolicy, __self__).__init__(
            'alicloud:kvstore/backupPolicy:BackupPolicy',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'backupPeriods' in outs:
            self.backup_periods = outs['backupPeriods']
        if 'backupTime' in outs:
            self.backup_time = outs['backupTime']
        if 'instanceId' in outs:
            self.instance_id = outs['instanceId']
