# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: reticul8.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nanopb_pb2 as nanopb__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='reticul8.proto',
  package='',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n\x0ereticul8.proto\x1a\x0cnanopb.proto\"3\n\x0bGPIO_CONFIG\x12\x0b\n\x03pin\x18\x01 \x02(\x07\x12\x17\n\x04mode\x18\x02 \x02(\x0e\x32\t.PIN_MODE\"0\n\x0cGPIO_MONITOR\x12\x0b\n\x03pin\x18\x01 \x02(\x07\x12\x13\n\x0b\x64\x65\x62ounce_ms\x18\x02 \x02(\x07\"4\n\nGPIO_WRITE\x12\x0b\n\x03pin\x18\x01 \x02(\x07\x12\x19\n\x05value\x18\x02 \x02(\x0e\x32\n.PIN_VALUE\"\x18\n\tGPIO_READ\x12\x0b\n\x03pin\x18\x01 \x02(\x07\"1\n\nOTA_UPDATE\x12\r\n\x05\x63hunk\x18\x01 \x02(\x07\x12\x14\n\x04\x64\x61ta\x18\x02 \x02(\x0c\x42\x06\x92?\x03\x08\xc8\x01\"\x19\n\nPWM_CONFIG\x12\x0b\n\x03pin\x18\x01 \x02(\x07\"\x17\n\x08PWM_STOP\x12\x0b\n\x03pin\x18\x01 \x02(\x07\"%\n\x08PWM_DUTY\x12\x0b\n\x03pin\x18\x01 \x02(\x07\x12\x0c\n\x04\x64uty\x18\x02 \x02(\x07\"6\n\x08PWM_FADE\x12\x0b\n\x03pin\x18\x01 \x02(\x07\x12\x0c\n\x04\x64uty\x18\x02 \x02(\x07\x12\x0f\n\x07\x66\x61\x64\x65_ms\x18\x03 \x02(\x07\".\n\nI2C_CONFIG\x12\x0f\n\x07pin_sda\x18\x01 \x01(\x07\x12\x0f\n\x07pin_scl\x18\x02 \x01(\x07\"=\n\tI2C_WRITE\x12\x0e\n\x06\x64\x65vice\x18\x01 \x02(\x07\x12\x0b\n\x03len\x18\x03 \x02(\x07\x12\x13\n\x04\x64\x61ta\x18\x04 \x02(\x0c\x42\x05\x92?\x02\x08 \"8\n\x08I2C_READ\x12\x0e\n\x06\x64\x65vice\x18\x01 \x02(\x07\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x02(\x07\x12\x0b\n\x03len\x18\x03 \x02(\x07\"\x14\n\x04PING\x12\x0c\n\x04ping\x18\x01 \x02(\x08\"\x18\n\x06REBOOT\x12\x0e\n\x06reboot\x18\x01 \x02(\x08\"\x1a\n\x07SYSINFO\x12\x0f\n\x07sysinfo\x18\x01 \x02(\x08\"=\n\x08SCHEDULE\x12\r\n\x05\x63ount\x18\x01 \x02(\x0f\x12\x10\n\x08\x65very_ms\x18\x02 \x02(\x07\x12\x10\n\x08\x61\x66ter_ms\x18\x03 \x02(\x07\"\"\n\nRUN_NESTED\x12\x14\n\x04\x64\x61ta\x18\x03 \x02(\x0c\x42\x06\x92?\x03\x08\xc4\x01\"\xc0\x04\n\x03RPC\x12#\n\x0bgpio_config\x18\x01 \x01(\x0b\x32\x0c.GPIO_CONFIGH\x00\x12!\n\ngpio_write\x18\x02 \x01(\x0b\x32\x0b.GPIO_WRITEH\x00\x12\x1f\n\tgpio_read\x18\x03 \x01(\x0b\x32\n.GPIO_READH\x00\x12%\n\x0cgpio_monitor\x18\x04 \x01(\x0b\x32\r.GPIO_MONITORH\x00\x12!\n\npwm_config\x18\x05 \x01(\x0b\x32\x0b.PWM_CONFIGH\x00\x12\x1d\n\x08pwm_duty\x18\x06 \x01(\x0b\x32\t.PWM_DUTYH\x00\x12\x1d\n\x08pwm_fade\x18\x07 \x01(\x0b\x32\t.PWM_FADEH\x00\x12\x1d\n\x08pwm_stop\x18\x0f \x01(\x0b\x32\t.PWM_STOPH\x00\x12\x15\n\x04ping\x18\x08 \x01(\x0b\x32\x05.PINGH\x00\x12\x1b\n\x07sysinfo\x18\t \x01(\x0b\x32\x08.SYSINFOH\x00\x12\x19\n\x06reboot\x18\x10 \x01(\x0b\x32\x07.REBOOTH\x00\x12!\n\ni2c_config\x18\n \x01(\x0b\x32\x0b.I2C_CONFIGH\x00\x12\x1f\n\ti2c_write\x18\x0b \x01(\x0b\x32\n.I2C_WRITEH\x00\x12\x1d\n\x08i2c_read\x18\x0c \x01(\x0b\x32\t.I2C_READH\x00\x12!\n\nota_update\x18\r \x01(\x0b\x32\x0b.OTA_UPDATEH\x00\x12\x1d\n\x06nested\x18\x0e \x01(\x0b\x32\x0b.RUN_NESTEDH\x00\x12\x0f\n\x06msg_id\x18\xc8\x01 \x02(\x07\x12\x1c\n\x08schedule\x18\xc9\x01 \x01(\x0b\x32\t.SCHEDULEB\x06\n\x04\x63\x61ll\"4\n\nPIN_CHANGE\x12\x0b\n\x03pin\x18\x01 \x02(\x07\x12\x19\n\x05value\x18\x02 \x02(\x0e\x32\n.PIN_VALUE\"Z\n\nRPC_RESULT\x12\x1c\n\x06result\x18\x01 \x02(\x0e\x32\x0c.RESULT_TYPE\x12\x1d\n\tpin_value\x18\x02 \x01(\x0e\x32\n.PIN_VALUE\x12\x0f\n\x06msg_id\x18\xc8\x01 \x02(\x07\"\xdf\x01\n\nFROM_MICRO\x12\x1d\n\x06result\x18\x01 \x01(\x0b\x32\x0b.RPC_RESULTH\x00\x12!\n\npin_change\x18\x02 \x01(\x0b\x32\x0b.PIN_CHANGEH\x00\x12\"\n\x07startup\x18\x03 \x01(\x0e\x32\x0f.STARTUP_REASONH\x00\x12\x15\n\x03raw\x18\xc8\x01 \x01(\x0c\x42\x05\x92?\x02\x08@H\x01\x12\x1e\n\x13schedules_remaining\x18\xc9\x01 \x01(\x0fH\x01\x12\x12\n\nheap_usage\x18\x15 \x02(\x07\x12\x11\n\tuptime_ms\x18\x16 \x02(\x07\x42\x05\n\x03msgB\x06\n\x04\x64\x61ta*E\n\x08PIN_MODE\x12\x13\n\x0fPM_INPUT_PULLUP\x10\x01\x12\x15\n\x11PM_INPUT_PULLDOWN\x10\x02\x12\r\n\tPM_OUTPUT\x10\x03*$\n\tPIN_VALUE\x12\n\n\x06PV_LOW\x10\x00\x12\x0b\n\x07PV_HIGH\x10\x01*;\n\x0bRESULT_TYPE\x12\x0e\n\nRT_UNKNOWN\x10\x01\x12\x0e\n\nRT_SUCCESS\x10\x02\x12\x0c\n\x08RT_ERROR\x10\x03*\xa9\x03\n\x0eSTARTUP_REASON\x12\x0e\n\nSR_UNKNOWN\x10\x01\x12\x17\n\x13\x45SP32_POWERON_RESET\x10\x02\x12\x12\n\x0e\x45SP32_SW_RESET\x10\x03\x12\x14\n\x10\x45SP32_OWDT_RESET\x10\x04\x12\x19\n\x15\x45SP32_DEEPSLEEP_RESET\x10\x05\x12\x14\n\x10\x45SP32_SDIO_RESET\x10\x06\x12\x1a\n\x16\x45SP32_TG0WDT_SYS_RESET\x10\x07\x12\x1a\n\x16\x45SP32_TG1WDT_SYS_RESET\x10\x08\x12\x1a\n\x16\x45SP32_RTCWDT_SYS_RESET\x10\t\x12\x19\n\x15\x45SP32_INTRUSION_RESET\x10\n\x12\x19\n\x15\x45SP32_TGWDT_CPU_RESET\x10\x0b\x12\x16\n\x12\x45SP32_SW_CPU_RESET\x10\x0c\x12\x1a\n\x16\x45SP32_RTCWDT_CPU_RESET\x10\r\x12\x17\n\x13\x45SP32_EXT_CPU_RESET\x10\x0e\x12 \n\x1c\x45SP32_RTCWDT_BROWN_OUT_RESET\x10\x0f\x12\x1a\n\x16\x45SP32_RTCWDT_RTC_RESET\x10\x10')
  ,
  dependencies=[nanopb__pb2.DESCRIPTOR,])

_PIN_MODE = _descriptor.EnumDescriptor(
  name='PIN_MODE',
  full_name='PIN_MODE',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PM_INPUT_PULLUP', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PM_INPUT_PULLDOWN', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PM_OUTPUT', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1708,
  serialized_end=1777,
)
_sym_db.RegisterEnumDescriptor(_PIN_MODE)

PIN_MODE = enum_type_wrapper.EnumTypeWrapper(_PIN_MODE)
_PIN_VALUE = _descriptor.EnumDescriptor(
  name='PIN_VALUE',
  full_name='PIN_VALUE',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PV_LOW', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PV_HIGH', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1779,
  serialized_end=1815,
)
_sym_db.RegisterEnumDescriptor(_PIN_VALUE)

PIN_VALUE = enum_type_wrapper.EnumTypeWrapper(_PIN_VALUE)
_RESULT_TYPE = _descriptor.EnumDescriptor(
  name='RESULT_TYPE',
  full_name='RESULT_TYPE',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RT_UNKNOWN', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_SUCCESS', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_ERROR', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1817,
  serialized_end=1876,
)
_sym_db.RegisterEnumDescriptor(_RESULT_TYPE)

RESULT_TYPE = enum_type_wrapper.EnumTypeWrapper(_RESULT_TYPE)
_STARTUP_REASON = _descriptor.EnumDescriptor(
  name='STARTUP_REASON',
  full_name='STARTUP_REASON',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SR_UNKNOWN', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_POWERON_RESET', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_SW_RESET', index=2, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_OWDT_RESET', index=3, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_DEEPSLEEP_RESET', index=4, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_SDIO_RESET', index=5, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_TG0WDT_SYS_RESET', index=6, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_TG1WDT_SYS_RESET', index=7, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_RTCWDT_SYS_RESET', index=8, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_INTRUSION_RESET', index=9, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_TGWDT_CPU_RESET', index=10, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_SW_CPU_RESET', index=11, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_RTCWDT_CPU_RESET', index=12, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_EXT_CPU_RESET', index=13, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_RTCWDT_BROWN_OUT_RESET', index=14, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ESP32_RTCWDT_RTC_RESET', index=15, number=16,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1879,
  serialized_end=2304,
)
_sym_db.RegisterEnumDescriptor(_STARTUP_REASON)

STARTUP_REASON = enum_type_wrapper.EnumTypeWrapper(_STARTUP_REASON)
PM_INPUT_PULLUP = 1
PM_INPUT_PULLDOWN = 2
PM_OUTPUT = 3
PV_LOW = 0
PV_HIGH = 1
RT_UNKNOWN = 1
RT_SUCCESS = 2
RT_ERROR = 3
SR_UNKNOWN = 1
ESP32_POWERON_RESET = 2
ESP32_SW_RESET = 3
ESP32_OWDT_RESET = 4
ESP32_DEEPSLEEP_RESET = 5
ESP32_SDIO_RESET = 6
ESP32_TG0WDT_SYS_RESET = 7
ESP32_TG1WDT_SYS_RESET = 8
ESP32_RTCWDT_SYS_RESET = 9
ESP32_INTRUSION_RESET = 10
ESP32_TGWDT_CPU_RESET = 11
ESP32_SW_CPU_RESET = 12
ESP32_RTCWDT_CPU_RESET = 13
ESP32_EXT_CPU_RESET = 14
ESP32_RTCWDT_BROWN_OUT_RESET = 15
ESP32_RTCWDT_RTC_RESET = 16



_GPIO_CONFIG = _descriptor.Descriptor(
  name='GPIO_CONFIG',
  full_name='GPIO_CONFIG',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='GPIO_CONFIG.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mode', full_name='GPIO_CONFIG.mode', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=83,
)


_GPIO_MONITOR = _descriptor.Descriptor(
  name='GPIO_MONITOR',
  full_name='GPIO_MONITOR',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='GPIO_MONITOR.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='debounce_ms', full_name='GPIO_MONITOR.debounce_ms', index=1,
      number=2, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=85,
  serialized_end=133,
)


_GPIO_WRITE = _descriptor.Descriptor(
  name='GPIO_WRITE',
  full_name='GPIO_WRITE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='GPIO_WRITE.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='GPIO_WRITE.value', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=187,
)


_GPIO_READ = _descriptor.Descriptor(
  name='GPIO_READ',
  full_name='GPIO_READ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='GPIO_READ.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=189,
  serialized_end=213,
)


_OTA_UPDATE = _descriptor.Descriptor(
  name='OTA_UPDATE',
  full_name='OTA_UPDATE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunk', full_name='OTA_UPDATE.chunk', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='OTA_UPDATE.data', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\003\010\310\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=215,
  serialized_end=264,
)


_PWM_CONFIG = _descriptor.Descriptor(
  name='PWM_CONFIG',
  full_name='PWM_CONFIG',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='PWM_CONFIG.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=266,
  serialized_end=291,
)


_PWM_STOP = _descriptor.Descriptor(
  name='PWM_STOP',
  full_name='PWM_STOP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='PWM_STOP.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=293,
  serialized_end=316,
)


_PWM_DUTY = _descriptor.Descriptor(
  name='PWM_DUTY',
  full_name='PWM_DUTY',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='PWM_DUTY.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duty', full_name='PWM_DUTY.duty', index=1,
      number=2, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=318,
  serialized_end=355,
)


_PWM_FADE = _descriptor.Descriptor(
  name='PWM_FADE',
  full_name='PWM_FADE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='PWM_FADE.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duty', full_name='PWM_FADE.duty', index=1,
      number=2, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fade_ms', full_name='PWM_FADE.fade_ms', index=2,
      number=3, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=357,
  serialized_end=411,
)


_I2C_CONFIG = _descriptor.Descriptor(
  name='I2C_CONFIG',
  full_name='I2C_CONFIG',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin_sda', full_name='I2C_CONFIG.pin_sda', index=0,
      number=1, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pin_scl', full_name='I2C_CONFIG.pin_scl', index=1,
      number=2, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=413,
  serialized_end=459,
)


_I2C_WRITE = _descriptor.Descriptor(
  name='I2C_WRITE',
  full_name='I2C_WRITE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='I2C_WRITE.device', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='len', full_name='I2C_WRITE.len', index=1,
      number=3, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='I2C_WRITE.data', index=2,
      number=4, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\002\010 '), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=461,
  serialized_end=522,
)


_I2C_READ = _descriptor.Descriptor(
  name='I2C_READ',
  full_name='I2C_READ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='I2C_READ.device', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='address', full_name='I2C_READ.address', index=1,
      number=2, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='len', full_name='I2C_READ.len', index=2,
      number=3, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=524,
  serialized_end=580,
)


_PING = _descriptor.Descriptor(
  name='PING',
  full_name='PING',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='PING.ping', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=582,
  serialized_end=602,
)


_REBOOT = _descriptor.Descriptor(
  name='REBOOT',
  full_name='REBOOT',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reboot', full_name='REBOOT.reboot', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=604,
  serialized_end=628,
)


_SYSINFO = _descriptor.Descriptor(
  name='SYSINFO',
  full_name='SYSINFO',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sysinfo', full_name='SYSINFO.sysinfo', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=630,
  serialized_end=656,
)


_SCHEDULE = _descriptor.Descriptor(
  name='SCHEDULE',
  full_name='SCHEDULE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='SCHEDULE.count', index=0,
      number=1, type=15, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='every_ms', full_name='SCHEDULE.every_ms', index=1,
      number=2, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='after_ms', full_name='SCHEDULE.after_ms', index=2,
      number=3, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=658,
  serialized_end=719,
)


_RUN_NESTED = _descriptor.Descriptor(
  name='RUN_NESTED',
  full_name='RUN_NESTED',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='RUN_NESTED.data', index=0,
      number=3, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\003\010\304\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=721,
  serialized_end=755,
)


_RPC = _descriptor.Descriptor(
  name='RPC',
  full_name='RPC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='gpio_config', full_name='RPC.gpio_config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gpio_write', full_name='RPC.gpio_write', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gpio_read', full_name='RPC.gpio_read', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gpio_monitor', full_name='RPC.gpio_monitor', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pwm_config', full_name='RPC.pwm_config', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pwm_duty', full_name='RPC.pwm_duty', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pwm_fade', full_name='RPC.pwm_fade', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pwm_stop', full_name='RPC.pwm_stop', index=7,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ping', full_name='RPC.ping', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sysinfo', full_name='RPC.sysinfo', index=9,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reboot', full_name='RPC.reboot', index=10,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='i2c_config', full_name='RPC.i2c_config', index=11,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='i2c_write', full_name='RPC.i2c_write', index=12,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='i2c_read', full_name='RPC.i2c_read', index=13,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ota_update', full_name='RPC.ota_update', index=14,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nested', full_name='RPC.nested', index=15,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='msg_id', full_name='RPC.msg_id', index=16,
      number=200, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='schedule', full_name='RPC.schedule', index=17,
      number=201, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='call', full_name='RPC.call',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=758,
  serialized_end=1334,
)


_PIN_CHANGE = _descriptor.Descriptor(
  name='PIN_CHANGE',
  full_name='PIN_CHANGE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='PIN_CHANGE.pin', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='PIN_CHANGE.value', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1336,
  serialized_end=1388,
)


_RPC_RESULT = _descriptor.Descriptor(
  name='RPC_RESULT',
  full_name='RPC_RESULT',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='RPC_RESULT.result', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pin_value', full_name='RPC_RESULT.pin_value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='msg_id', full_name='RPC_RESULT.msg_id', index=2,
      number=200, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1390,
  serialized_end=1480,
)


_FROM_MICRO = _descriptor.Descriptor(
  name='FROM_MICRO',
  full_name='FROM_MICRO',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='FROM_MICRO.result', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pin_change', full_name='FROM_MICRO.pin_change', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='startup', full_name='FROM_MICRO.startup', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='raw', full_name='FROM_MICRO.raw', index=3,
      number=200, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\002\010@'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='schedules_remaining', full_name='FROM_MICRO.schedules_remaining', index=4,
      number=201, type=15, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heap_usage', full_name='FROM_MICRO.heap_usage', index=5,
      number=21, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uptime_ms', full_name='FROM_MICRO.uptime_ms', index=6,
      number=22, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='msg', full_name='FROM_MICRO.msg',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='data', full_name='FROM_MICRO.data',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=1483,
  serialized_end=1706,
)

_GPIO_CONFIG.fields_by_name['mode'].enum_type = _PIN_MODE
_GPIO_WRITE.fields_by_name['value'].enum_type = _PIN_VALUE
_RPC.fields_by_name['gpio_config'].message_type = _GPIO_CONFIG
_RPC.fields_by_name['gpio_write'].message_type = _GPIO_WRITE
_RPC.fields_by_name['gpio_read'].message_type = _GPIO_READ
_RPC.fields_by_name['gpio_monitor'].message_type = _GPIO_MONITOR
_RPC.fields_by_name['pwm_config'].message_type = _PWM_CONFIG
_RPC.fields_by_name['pwm_duty'].message_type = _PWM_DUTY
_RPC.fields_by_name['pwm_fade'].message_type = _PWM_FADE
_RPC.fields_by_name['pwm_stop'].message_type = _PWM_STOP
_RPC.fields_by_name['ping'].message_type = _PING
_RPC.fields_by_name['sysinfo'].message_type = _SYSINFO
_RPC.fields_by_name['reboot'].message_type = _REBOOT
_RPC.fields_by_name['i2c_config'].message_type = _I2C_CONFIG
_RPC.fields_by_name['i2c_write'].message_type = _I2C_WRITE
_RPC.fields_by_name['i2c_read'].message_type = _I2C_READ
_RPC.fields_by_name['ota_update'].message_type = _OTA_UPDATE
_RPC.fields_by_name['nested'].message_type = _RUN_NESTED
_RPC.fields_by_name['schedule'].message_type = _SCHEDULE
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['gpio_config'])
_RPC.fields_by_name['gpio_config'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['gpio_write'])
_RPC.fields_by_name['gpio_write'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['gpio_read'])
_RPC.fields_by_name['gpio_read'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['gpio_monitor'])
_RPC.fields_by_name['gpio_monitor'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['pwm_config'])
_RPC.fields_by_name['pwm_config'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['pwm_duty'])
_RPC.fields_by_name['pwm_duty'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['pwm_fade'])
_RPC.fields_by_name['pwm_fade'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['pwm_stop'])
_RPC.fields_by_name['pwm_stop'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['ping'])
_RPC.fields_by_name['ping'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['sysinfo'])
_RPC.fields_by_name['sysinfo'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['reboot'])
_RPC.fields_by_name['reboot'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['i2c_config'])
_RPC.fields_by_name['i2c_config'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['i2c_write'])
_RPC.fields_by_name['i2c_write'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['i2c_read'])
_RPC.fields_by_name['i2c_read'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['ota_update'])
_RPC.fields_by_name['ota_update'].containing_oneof = _RPC.oneofs_by_name['call']
_RPC.oneofs_by_name['call'].fields.append(
  _RPC.fields_by_name['nested'])
_RPC.fields_by_name['nested'].containing_oneof = _RPC.oneofs_by_name['call']
_PIN_CHANGE.fields_by_name['value'].enum_type = _PIN_VALUE
_RPC_RESULT.fields_by_name['result'].enum_type = _RESULT_TYPE
_RPC_RESULT.fields_by_name['pin_value'].enum_type = _PIN_VALUE
_FROM_MICRO.fields_by_name['result'].message_type = _RPC_RESULT
_FROM_MICRO.fields_by_name['pin_change'].message_type = _PIN_CHANGE
_FROM_MICRO.fields_by_name['startup'].enum_type = _STARTUP_REASON
_FROM_MICRO.oneofs_by_name['msg'].fields.append(
  _FROM_MICRO.fields_by_name['result'])
_FROM_MICRO.fields_by_name['result'].containing_oneof = _FROM_MICRO.oneofs_by_name['msg']
_FROM_MICRO.oneofs_by_name['msg'].fields.append(
  _FROM_MICRO.fields_by_name['pin_change'])
_FROM_MICRO.fields_by_name['pin_change'].containing_oneof = _FROM_MICRO.oneofs_by_name['msg']
_FROM_MICRO.oneofs_by_name['msg'].fields.append(
  _FROM_MICRO.fields_by_name['startup'])
_FROM_MICRO.fields_by_name['startup'].containing_oneof = _FROM_MICRO.oneofs_by_name['msg']
_FROM_MICRO.oneofs_by_name['data'].fields.append(
  _FROM_MICRO.fields_by_name['raw'])
_FROM_MICRO.fields_by_name['raw'].containing_oneof = _FROM_MICRO.oneofs_by_name['data']
_FROM_MICRO.oneofs_by_name['data'].fields.append(
  _FROM_MICRO.fields_by_name['schedules_remaining'])
_FROM_MICRO.fields_by_name['schedules_remaining'].containing_oneof = _FROM_MICRO.oneofs_by_name['data']
DESCRIPTOR.message_types_by_name['GPIO_CONFIG'] = _GPIO_CONFIG
DESCRIPTOR.message_types_by_name['GPIO_MONITOR'] = _GPIO_MONITOR
DESCRIPTOR.message_types_by_name['GPIO_WRITE'] = _GPIO_WRITE
DESCRIPTOR.message_types_by_name['GPIO_READ'] = _GPIO_READ
DESCRIPTOR.message_types_by_name['OTA_UPDATE'] = _OTA_UPDATE
DESCRIPTOR.message_types_by_name['PWM_CONFIG'] = _PWM_CONFIG
DESCRIPTOR.message_types_by_name['PWM_STOP'] = _PWM_STOP
DESCRIPTOR.message_types_by_name['PWM_DUTY'] = _PWM_DUTY
DESCRIPTOR.message_types_by_name['PWM_FADE'] = _PWM_FADE
DESCRIPTOR.message_types_by_name['I2C_CONFIG'] = _I2C_CONFIG
DESCRIPTOR.message_types_by_name['I2C_WRITE'] = _I2C_WRITE
DESCRIPTOR.message_types_by_name['I2C_READ'] = _I2C_READ
DESCRIPTOR.message_types_by_name['PING'] = _PING
DESCRIPTOR.message_types_by_name['REBOOT'] = _REBOOT
DESCRIPTOR.message_types_by_name['SYSINFO'] = _SYSINFO
DESCRIPTOR.message_types_by_name['SCHEDULE'] = _SCHEDULE
DESCRIPTOR.message_types_by_name['RUN_NESTED'] = _RUN_NESTED
DESCRIPTOR.message_types_by_name['RPC'] = _RPC
DESCRIPTOR.message_types_by_name['PIN_CHANGE'] = _PIN_CHANGE
DESCRIPTOR.message_types_by_name['RPC_RESULT'] = _RPC_RESULT
DESCRIPTOR.message_types_by_name['FROM_MICRO'] = _FROM_MICRO
DESCRIPTOR.enum_types_by_name['PIN_MODE'] = _PIN_MODE
DESCRIPTOR.enum_types_by_name['PIN_VALUE'] = _PIN_VALUE
DESCRIPTOR.enum_types_by_name['RESULT_TYPE'] = _RESULT_TYPE
DESCRIPTOR.enum_types_by_name['STARTUP_REASON'] = _STARTUP_REASON
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GPIO_CONFIG = _reflection.GeneratedProtocolMessageType('GPIO_CONFIG', (_message.Message,), dict(
  DESCRIPTOR = _GPIO_CONFIG,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:GPIO_CONFIG)
  ))
_sym_db.RegisterMessage(GPIO_CONFIG)

GPIO_MONITOR = _reflection.GeneratedProtocolMessageType('GPIO_MONITOR', (_message.Message,), dict(
  DESCRIPTOR = _GPIO_MONITOR,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:GPIO_MONITOR)
  ))
_sym_db.RegisterMessage(GPIO_MONITOR)

GPIO_WRITE = _reflection.GeneratedProtocolMessageType('GPIO_WRITE', (_message.Message,), dict(
  DESCRIPTOR = _GPIO_WRITE,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:GPIO_WRITE)
  ))
_sym_db.RegisterMessage(GPIO_WRITE)

GPIO_READ = _reflection.GeneratedProtocolMessageType('GPIO_READ', (_message.Message,), dict(
  DESCRIPTOR = _GPIO_READ,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:GPIO_READ)
  ))
_sym_db.RegisterMessage(GPIO_READ)

OTA_UPDATE = _reflection.GeneratedProtocolMessageType('OTA_UPDATE', (_message.Message,), dict(
  DESCRIPTOR = _OTA_UPDATE,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:OTA_UPDATE)
  ))
_sym_db.RegisterMessage(OTA_UPDATE)

PWM_CONFIG = _reflection.GeneratedProtocolMessageType('PWM_CONFIG', (_message.Message,), dict(
  DESCRIPTOR = _PWM_CONFIG,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:PWM_CONFIG)
  ))
_sym_db.RegisterMessage(PWM_CONFIG)

PWM_STOP = _reflection.GeneratedProtocolMessageType('PWM_STOP', (_message.Message,), dict(
  DESCRIPTOR = _PWM_STOP,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:PWM_STOP)
  ))
_sym_db.RegisterMessage(PWM_STOP)

PWM_DUTY = _reflection.GeneratedProtocolMessageType('PWM_DUTY', (_message.Message,), dict(
  DESCRIPTOR = _PWM_DUTY,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:PWM_DUTY)
  ))
_sym_db.RegisterMessage(PWM_DUTY)

PWM_FADE = _reflection.GeneratedProtocolMessageType('PWM_FADE', (_message.Message,), dict(
  DESCRIPTOR = _PWM_FADE,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:PWM_FADE)
  ))
_sym_db.RegisterMessage(PWM_FADE)

I2C_CONFIG = _reflection.GeneratedProtocolMessageType('I2C_CONFIG', (_message.Message,), dict(
  DESCRIPTOR = _I2C_CONFIG,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:I2C_CONFIG)
  ))
_sym_db.RegisterMessage(I2C_CONFIG)

I2C_WRITE = _reflection.GeneratedProtocolMessageType('I2C_WRITE', (_message.Message,), dict(
  DESCRIPTOR = _I2C_WRITE,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:I2C_WRITE)
  ))
_sym_db.RegisterMessage(I2C_WRITE)

I2C_READ = _reflection.GeneratedProtocolMessageType('I2C_READ', (_message.Message,), dict(
  DESCRIPTOR = _I2C_READ,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:I2C_READ)
  ))
_sym_db.RegisterMessage(I2C_READ)

PING = _reflection.GeneratedProtocolMessageType('PING', (_message.Message,), dict(
  DESCRIPTOR = _PING,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:PING)
  ))
_sym_db.RegisterMessage(PING)

REBOOT = _reflection.GeneratedProtocolMessageType('REBOOT', (_message.Message,), dict(
  DESCRIPTOR = _REBOOT,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:REBOOT)
  ))
_sym_db.RegisterMessage(REBOOT)

SYSINFO = _reflection.GeneratedProtocolMessageType('SYSINFO', (_message.Message,), dict(
  DESCRIPTOR = _SYSINFO,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:SYSINFO)
  ))
_sym_db.RegisterMessage(SYSINFO)

SCHEDULE = _reflection.GeneratedProtocolMessageType('SCHEDULE', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULE,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:SCHEDULE)
  ))
_sym_db.RegisterMessage(SCHEDULE)

RUN_NESTED = _reflection.GeneratedProtocolMessageType('RUN_NESTED', (_message.Message,), dict(
  DESCRIPTOR = _RUN_NESTED,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:RUN_NESTED)
  ))
_sym_db.RegisterMessage(RUN_NESTED)

RPC = _reflection.GeneratedProtocolMessageType('RPC', (_message.Message,), dict(
  DESCRIPTOR = _RPC,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:RPC)
  ))
_sym_db.RegisterMessage(RPC)

PIN_CHANGE = _reflection.GeneratedProtocolMessageType('PIN_CHANGE', (_message.Message,), dict(
  DESCRIPTOR = _PIN_CHANGE,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:PIN_CHANGE)
  ))
_sym_db.RegisterMessage(PIN_CHANGE)

RPC_RESULT = _reflection.GeneratedProtocolMessageType('RPC_RESULT', (_message.Message,), dict(
  DESCRIPTOR = _RPC_RESULT,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:RPC_RESULT)
  ))
_sym_db.RegisterMessage(RPC_RESULT)

FROM_MICRO = _reflection.GeneratedProtocolMessageType('FROM_MICRO', (_message.Message,), dict(
  DESCRIPTOR = _FROM_MICRO,
  __module__ = 'reticul8_pb2'
  # @@protoc_insertion_point(class_scope:FROM_MICRO)
  ))
_sym_db.RegisterMessage(FROM_MICRO)


_OTA_UPDATE.fields_by_name['data']._options = None
_I2C_WRITE.fields_by_name['data']._options = None
_RUN_NESTED.fields_by_name['data']._options = None
_FROM_MICRO.fields_by_name['raw']._options = None
# @@protoc_insertion_point(module_scope)
