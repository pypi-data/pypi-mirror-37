# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: 3.2.14
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six

# from xms_client.models.dp_site_config import DpSiteConfig  # noqa: F401,E501


class DpSiteUpdateReqSite(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'config': 'DpSiteConfig',
        'name': 'str'
    }

    attribute_map = {
        'config': 'config',
        'name': 'name'
    }

    def __init__(self, config=None, name=None):  # noqa: E501
        """DpSiteUpdateReqSite - a model defined in Swagger"""  # noqa: E501

        self._config = None
        self._name = None
        self.discriminator = None

        if config is not None:
            self.config = config
        if name is not None:
            self.name = name

    @property
    def config(self):
        """Gets the config of this DpSiteUpdateReqSite.  # noqa: E501

        dp site config  # noqa: E501

        :return: The config of this DpSiteUpdateReqSite.  # noqa: E501
        :rtype: DpSiteConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this DpSiteUpdateReqSite.

        dp site config  # noqa: E501

        :param config: The config of this DpSiteUpdateReqSite.  # noqa: E501
        :type: DpSiteConfig
        """

        self._config = config

    @property
    def name(self):
        """Gets the name of this DpSiteUpdateReqSite.  # noqa: E501

        dp site name  # noqa: E501

        :return: The name of this DpSiteUpdateReqSite.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DpSiteUpdateReqSite.

        dp site name  # noqa: E501

        :param name: The name of this DpSiteUpdateReqSite.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DpSiteUpdateReqSite):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
