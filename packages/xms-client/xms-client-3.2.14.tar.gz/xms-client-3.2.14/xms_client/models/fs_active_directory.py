# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: 3.2.14
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six


class FSActiveDirectory(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'action_status': 'str',
        'create': 'datetime',
        'fs_ad_user_num': 'int',
        'fs_gateway_group_num': 'int',
        'fs_user_num': 'int',
        'id': 'int',
        'ip': 'str',
        'name': 'str',
        'realm': 'str',
        'status': 'str',
        'sync_time': 'datetime',
        'update': 'datetime',
        'username': 'str',
        'workgroup': 'str'
    }

    attribute_map = {
        'action_status': 'action_status',
        'create': 'create',
        'fs_ad_user_num': 'fs_ad_user_num',
        'fs_gateway_group_num': 'fs_gateway_group_num',
        'fs_user_num': 'fs_user_num',
        'id': 'id',
        'ip': 'ip',
        'name': 'name',
        'realm': 'realm',
        'status': 'status',
        'sync_time': 'sync_time',
        'update': 'update',
        'username': 'username',
        'workgroup': 'workgroup'
    }

    def __init__(self, action_status=None, create=None, fs_ad_user_num=None, fs_gateway_group_num=None, fs_user_num=None, id=None, ip=None, name=None, realm=None, status=None, sync_time=None, update=None, username=None, workgroup=None):  # noqa: E501
        """FSActiveDirectory - a model defined in Swagger"""  # noqa: E501

        self._action_status = None
        self._create = None
        self._fs_ad_user_num = None
        self._fs_gateway_group_num = None
        self._fs_user_num = None
        self._id = None
        self._ip = None
        self._name = None
        self._realm = None
        self._status = None
        self._sync_time = None
        self._update = None
        self._username = None
        self._workgroup = None
        self.discriminator = None

        if action_status is not None:
            self.action_status = action_status
        if create is not None:
            self.create = create
        if fs_ad_user_num is not None:
            self.fs_ad_user_num = fs_ad_user_num
        if fs_gateway_group_num is not None:
            self.fs_gateway_group_num = fs_gateway_group_num
        if fs_user_num is not None:
            self.fs_user_num = fs_user_num
        if id is not None:
            self.id = id
        if ip is not None:
            self.ip = ip
        if name is not None:
            self.name = name
        if realm is not None:
            self.realm = realm
        if status is not None:
            self.status = status
        if sync_time is not None:
            self.sync_time = sync_time
        if update is not None:
            self.update = update
        if username is not None:
            self.username = username
        if workgroup is not None:
            self.workgroup = workgroup

    @property
    def action_status(self):
        """Gets the action_status of this FSActiveDirectory.  # noqa: E501


        :return: The action_status of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._action_status

    @action_status.setter
    def action_status(self, action_status):
        """Sets the action_status of this FSActiveDirectory.


        :param action_status: The action_status of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._action_status = action_status

    @property
    def create(self):
        """Gets the create of this FSActiveDirectory.  # noqa: E501


        :return: The create of this FSActiveDirectory.  # noqa: E501
        :rtype: datetime
        """
        return self._create

    @create.setter
    def create(self, create):
        """Sets the create of this FSActiveDirectory.


        :param create: The create of this FSActiveDirectory.  # noqa: E501
        :type: datetime
        """

        self._create = create

    @property
    def fs_ad_user_num(self):
        """Gets the fs_ad_user_num of this FSActiveDirectory.  # noqa: E501


        :return: The fs_ad_user_num of this FSActiveDirectory.  # noqa: E501
        :rtype: int
        """
        return self._fs_ad_user_num

    @fs_ad_user_num.setter
    def fs_ad_user_num(self, fs_ad_user_num):
        """Sets the fs_ad_user_num of this FSActiveDirectory.


        :param fs_ad_user_num: The fs_ad_user_num of this FSActiveDirectory.  # noqa: E501
        :type: int
        """

        self._fs_ad_user_num = fs_ad_user_num

    @property
    def fs_gateway_group_num(self):
        """Gets the fs_gateway_group_num of this FSActiveDirectory.  # noqa: E501


        :return: The fs_gateway_group_num of this FSActiveDirectory.  # noqa: E501
        :rtype: int
        """
        return self._fs_gateway_group_num

    @fs_gateway_group_num.setter
    def fs_gateway_group_num(self, fs_gateway_group_num):
        """Sets the fs_gateway_group_num of this FSActiveDirectory.


        :param fs_gateway_group_num: The fs_gateway_group_num of this FSActiveDirectory.  # noqa: E501
        :type: int
        """

        self._fs_gateway_group_num = fs_gateway_group_num

    @property
    def fs_user_num(self):
        """Gets the fs_user_num of this FSActiveDirectory.  # noqa: E501


        :return: The fs_user_num of this FSActiveDirectory.  # noqa: E501
        :rtype: int
        """
        return self._fs_user_num

    @fs_user_num.setter
    def fs_user_num(self, fs_user_num):
        """Sets the fs_user_num of this FSActiveDirectory.


        :param fs_user_num: The fs_user_num of this FSActiveDirectory.  # noqa: E501
        :type: int
        """

        self._fs_user_num = fs_user_num

    @property
    def id(self):
        """Gets the id of this FSActiveDirectory.  # noqa: E501


        :return: The id of this FSActiveDirectory.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FSActiveDirectory.


        :param id: The id of this FSActiveDirectory.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def ip(self):
        """Gets the ip of this FSActiveDirectory.  # noqa: E501


        :return: The ip of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this FSActiveDirectory.


        :param ip: The ip of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._ip = ip

    @property
    def name(self):
        """Gets the name of this FSActiveDirectory.  # noqa: E501


        :return: The name of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FSActiveDirectory.


        :param name: The name of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def realm(self):
        """Gets the realm of this FSActiveDirectory.  # noqa: E501


        :return: The realm of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._realm

    @realm.setter
    def realm(self, realm):
        """Sets the realm of this FSActiveDirectory.


        :param realm: The realm of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._realm = realm

    @property
    def status(self):
        """Gets the status of this FSActiveDirectory.  # noqa: E501


        :return: The status of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FSActiveDirectory.


        :param status: The status of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def sync_time(self):
        """Gets the sync_time of this FSActiveDirectory.  # noqa: E501


        :return: The sync_time of this FSActiveDirectory.  # noqa: E501
        :rtype: datetime
        """
        return self._sync_time

    @sync_time.setter
    def sync_time(self, sync_time):
        """Sets the sync_time of this FSActiveDirectory.


        :param sync_time: The sync_time of this FSActiveDirectory.  # noqa: E501
        :type: datetime
        """

        self._sync_time = sync_time

    @property
    def update(self):
        """Gets the update of this FSActiveDirectory.  # noqa: E501


        :return: The update of this FSActiveDirectory.  # noqa: E501
        :rtype: datetime
        """
        return self._update

    @update.setter
    def update(self, update):
        """Sets the update of this FSActiveDirectory.


        :param update: The update of this FSActiveDirectory.  # noqa: E501
        :type: datetime
        """

        self._update = update

    @property
    def username(self):
        """Gets the username of this FSActiveDirectory.  # noqa: E501


        :return: The username of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this FSActiveDirectory.


        :param username: The username of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._username = username

    @property
    def workgroup(self):
        """Gets the workgroup of this FSActiveDirectory.  # noqa: E501


        :return: The workgroup of this FSActiveDirectory.  # noqa: E501
        :rtype: str
        """
        return self._workgroup

    @workgroup.setter
    def workgroup(self, workgroup):
        """Sets the workgroup of this FSActiveDirectory.


        :param workgroup: The workgroup of this FSActiveDirectory.  # noqa: E501
        :type: str
        """

        self._workgroup = workgroup

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FSActiveDirectory):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
