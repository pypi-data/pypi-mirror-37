# coding: utf-8

"""
    Nucleus REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.6.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from nucleus_client.models.data_view import DataView  # noqa: F401,E501
from nucleus_client.models.download_error import DownloadError  # noqa: F401,E501


class Download(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'download_name': 'str',
        'user_id': 'str',
        'client_id': 'str',
        'data_view': 'DataView',
        'file_type': 'str',
        'status': 'str',
        'download_location': 'str',
        'file_size': 'str',
        'row_count': 'str',
        'dt_requested': 'str',
        'dt_completed': 'str',
        'dt_expire': 'str',
        'error': 'DownloadError'
    }

    attribute_map = {
        'id': '_id',
        'download_name': 'download_name',
        'user_id': 'user_id',
        'client_id': 'client_id',
        'data_view': 'data_view',
        'file_type': 'file_type',
        'status': 'status',
        'download_location': 'download_location',
        'file_size': 'file_size',
        'row_count': 'row_count',
        'dt_requested': 'dt_requested',
        'dt_completed': 'dt_completed',
        'dt_expire': 'dt_expire',
        'error': 'error'
    }

    def __init__(self, id=None, download_name=None, user_id=None, client_id=None, data_view=None, file_type=None, status=None, download_location=None, file_size=None, row_count=None, dt_requested=None, dt_completed=None, dt_expire=None, error=None):  # noqa: E501
        """Download - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._download_name = None
        self._user_id = None
        self._client_id = None
        self._data_view = None
        self._file_type = None
        self._status = None
        self._download_location = None
        self._file_size = None
        self._row_count = None
        self._dt_requested = None
        self._dt_completed = None
        self._dt_expire = None
        self._error = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if download_name is not None:
            self.download_name = download_name
        if user_id is not None:
            self.user_id = user_id
        if client_id is not None:
            self.client_id = client_id
        if data_view is not None:
            self.data_view = data_view
        if file_type is not None:
            self.file_type = file_type
        if status is not None:
            self.status = status
        if download_location is not None:
            self.download_location = download_location
        if file_size is not None:
            self.file_size = file_size
        if row_count is not None:
            self.row_count = row_count
        if dt_requested is not None:
            self.dt_requested = dt_requested
        if dt_completed is not None:
            self.dt_completed = dt_completed
        if dt_expire is not None:
            self.dt_expire = dt_expire
        if error is not None:
            self.error = error

    @property
    def id(self):
        """Gets the id of this Download.  # noqa: E501


        :return: The id of this Download.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Download.


        :param id: The id of this Download.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def download_name(self):
        """Gets the download_name of this Download.  # noqa: E501


        :return: The download_name of this Download.  # noqa: E501
        :rtype: str
        """
        return self._download_name

    @download_name.setter
    def download_name(self, download_name):
        """Sets the download_name of this Download.


        :param download_name: The download_name of this Download.  # noqa: E501
        :type: str
        """

        self._download_name = download_name

    @property
    def user_id(self):
        """Gets the user_id of this Download.  # noqa: E501


        :return: The user_id of this Download.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Download.


        :param user_id: The user_id of this Download.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def client_id(self):
        """Gets the client_id of this Download.  # noqa: E501


        :return: The client_id of this Download.  # noqa: E501
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this Download.


        :param client_id: The client_id of this Download.  # noqa: E501
        :type: str
        """

        self._client_id = client_id

    @property
    def data_view(self):
        """Gets the data_view of this Download.  # noqa: E501


        :return: The data_view of this Download.  # noqa: E501
        :rtype: DataView
        """
        return self._data_view

    @data_view.setter
    def data_view(self, data_view):
        """Sets the data_view of this Download.


        :param data_view: The data_view of this Download.  # noqa: E501
        :type: DataView
        """

        self._data_view = data_view

    @property
    def file_type(self):
        """Gets the file_type of this Download.  # noqa: E501


        :return: The file_type of this Download.  # noqa: E501
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this Download.


        :param file_type: The file_type of this Download.  # noqa: E501
        :type: str
        """

        self._file_type = file_type

    @property
    def status(self):
        """Gets the status of this Download.  # noqa: E501


        :return: The status of this Download.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Download.


        :param status: The status of this Download.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def download_location(self):
        """Gets the download_location of this Download.  # noqa: E501


        :return: The download_location of this Download.  # noqa: E501
        :rtype: str
        """
        return self._download_location

    @download_location.setter
    def download_location(self, download_location):
        """Sets the download_location of this Download.


        :param download_location: The download_location of this Download.  # noqa: E501
        :type: str
        """

        self._download_location = download_location

    @property
    def file_size(self):
        """Gets the file_size of this Download.  # noqa: E501


        :return: The file_size of this Download.  # noqa: E501
        :rtype: str
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this Download.


        :param file_size: The file_size of this Download.  # noqa: E501
        :type: str
        """

        self._file_size = file_size

    @property
    def row_count(self):
        """Gets the row_count of this Download.  # noqa: E501


        :return: The row_count of this Download.  # noqa: E501
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this Download.


        :param row_count: The row_count of this Download.  # noqa: E501
        :type: str
        """

        self._row_count = row_count

    @property
    def dt_requested(self):
        """Gets the dt_requested of this Download.  # noqa: E501


        :return: The dt_requested of this Download.  # noqa: E501
        :rtype: str
        """
        return self._dt_requested

    @dt_requested.setter
    def dt_requested(self, dt_requested):
        """Sets the dt_requested of this Download.


        :param dt_requested: The dt_requested of this Download.  # noqa: E501
        :type: str
        """

        self._dt_requested = dt_requested

    @property
    def dt_completed(self):
        """Gets the dt_completed of this Download.  # noqa: E501


        :return: The dt_completed of this Download.  # noqa: E501
        :rtype: str
        """
        return self._dt_completed

    @dt_completed.setter
    def dt_completed(self, dt_completed):
        """Sets the dt_completed of this Download.


        :param dt_completed: The dt_completed of this Download.  # noqa: E501
        :type: str
        """

        self._dt_completed = dt_completed

    @property
    def dt_expire(self):
        """Gets the dt_expire of this Download.  # noqa: E501


        :return: The dt_expire of this Download.  # noqa: E501
        :rtype: str
        """
        return self._dt_expire

    @dt_expire.setter
    def dt_expire(self, dt_expire):
        """Sets the dt_expire of this Download.


        :param dt_expire: The dt_expire of this Download.  # noqa: E501
        :type: str
        """

        self._dt_expire = dt_expire

    @property
    def error(self):
        """Gets the error of this Download.  # noqa: E501


        :return: The error of this Download.  # noqa: E501
        :rtype: DownloadError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this Download.


        :param error: The error of this Download.  # noqa: E501
        :type: DownloadError
        """

        self._error = error

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Download):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
