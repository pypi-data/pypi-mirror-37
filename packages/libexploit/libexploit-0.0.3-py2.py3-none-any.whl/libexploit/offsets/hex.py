from libexploit.io.stdout import init_logger


def calculate_x86_hex_offset(target, start=int('0x100000000', 16)):
    # (str, str) -> (str, int)
    logger = init_logger()
    default = int('0x100000000', 16)
    int_target = int(target, 16)
    if start == default:
        logger.info('calculating offset between {s} and {t}'.format(
            s='0x00000000', t=target))
    else:
        logger.info('calculating offset between {s} and {t}'.format(
            s='0x{value:08x}'.format(value=start), t=target))
    offset = start - int_target
    logger.info('offset is: {ho} hex or {do} decimal'.format(
        ho='0x{value:08x}'.format(value=offset), do=offset))
    return ('0x{value:08x}'.format(value=offset), offset)
