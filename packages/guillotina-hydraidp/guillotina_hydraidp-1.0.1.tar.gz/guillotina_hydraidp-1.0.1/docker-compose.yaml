version: '3'
services:
  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - redis
  guillotina:
    build: .
    ports:
    - "8080:8080"
    command: ['guillotina', '-c', 'config-pg.yaml']
    volumes:
    - .:/usr/src/app
    - logvolume01:/var/log
    links:
    - postgres
    networks:
    - postgres
    - esnet
    - redis
    - hydra
  # test:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.test
  #   volumes:
  #   - .:/usr/src/app
  #   - /var/run/docker.sock:/var/run/docker.sock
  #   - logvolume01:/var/log
  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: secret
        POSTGRES_INITDB_ARGS: --data-checksums
        POSTGRES_DB: guillotina
    volumes:
    - postgres_data_cms:/var/lib/postgresql/data
    networks:
      - postgres

  hydra-migrate:
    image: oryd/hydra:v1.0.0-beta.9
    environment:
      - DATABASE_URL=postgres://postgres:secret@postgres:5432/guillotina?sslmode=disable
    command:
      migrate sql -e
    restart: on-failure
    networks:
    - postgres
    links:
    - postgres
  hydra:
    image: oryd/hydra:v1.0.0-beta.9
    depends_on:
      - hydra-migrate
    ports:
      # Public port
      - "4444:4444"
      # Admin port
      - "4445:4445"
    command:
      serve all --dangerous-force-http
    environment:
      - OAUTH2_ISSUER_URL=http://localhost:5444
      - OAUTH2_CONSENT_URL=http://localhost:4200/consent
      - OAUTH2_LOGIN_URL=http://localhost:4200/login
      - DATABASE_URL=postgres://postgres:secret@postgres:5432/guillotina?sslmode=disable
      - SYSTEM_SECRET=youReallyNeedToChangeThis
      - OAUTH2_SHARE_ERROR_DEBUG=1
      - OIDC_SUBJECT_TYPES_SUPPORTED=public,pairwise
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=youReallyNeedToChangeThis
    restart: unless-stopped
    networks:
    - postgres
    - hydra
    links:
    - postgres
  hydra-proxy:
    image: nginx:1.15.5
    volumes:
      - ./nginx-hydra.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
    - hydra
    links:
    - hydra
    expose:
    - 5444
    - 5443
    ports:
    - 5444:5444
    - 5443:5443
  ngapp:
    build: loginapp
    expose:
    - 4200
    ports:
    - "4200:4200"
    volumes:
    - ./loginapp/src:/ng-app/src
    links:
    - postgres
    networks:
    - postgres
    - esnet
    - redis
    - hydra
volumes:
  logvolume01: {}
  postgres_data_cms: {}
  hydra_data: {}
  esdata1:
    driver: local

networks:
  esnet:
  postgres:
  redis:
  hydra:

