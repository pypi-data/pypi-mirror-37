{
  "TestService": {
    "id": 9999,
    "documentation": "<doc>\n<summary>\nService documentation string.\n</summary>\n</doc>",
    "procedures": {
      "FloatToString": {
        "id": 1,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "FLOAT"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": "<doc>\n<summary>\nProcedure documentation string.\n</summary>\n</doc>"
      },
      "DoubleToString": {
        "id": 2,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "DOUBLE"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "Int32ToString": {
        "id": 3,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "SINT32"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "Int64ToString": {
        "id": 4,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "SINT64"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "BoolToString": {
        "id": 5,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "BOOL"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "StringToInt32": {
        "id": 6,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "STRING"
            }
          }
        ],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "BytesToHexString": {
        "id": 7,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "BYTES"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "AddMultipleValues": {
        "id": 8,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "FLOAT"
            }
          },
          {
            "name": "y",
            "type": {
              "code": "SINT32"
            }
          },
          {
            "name": "z",
            "type": {
              "code": "SINT64"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "CreateTestObject": {
        "id": 9,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "STRING"
            }
          }
        ],
        "return_type": {
          "code": "CLASS",
          "service": "TestService",
          "name": "TestClass"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "EchoTestObject": {
        "id": 10,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "return_type": {
          "code": "CLASS",
          "service": "TestService",
          "name": "TestClass"
        },
        "return_is_nullable": true,
        "documentation": ""
      },
      "ReturnNullWhenNotAllowed": {
        "id": 11,
        "parameters": [],
        "return_type": {
          "code": "CLASS",
          "service": "TestService",
          "name": "TestClass"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "OptionalArguments": {
        "id": 12,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "STRING"
            }
          },
          {
            "name": "y",
            "type": {
              "code": "STRING"
            },
            "default_value": "A2Zvbw=="
          },
          {
            "name": "z",
            "type": {
              "code": "STRING"
            },
            "default_value": "A2Jhcg=="
          },
          {
            "name": "obj",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            },
            "default_value": "AA=="
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "EnumReturn": {
        "id": 13,
        "parameters": [],
        "return_type": {
          "code": "ENUMERATION",
          "service": "TestService",
          "name": "TestEnum"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "EnumEcho": {
        "id": 14,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "ENUMERATION",
              "service": "TestService",
              "name": "TestEnum"
            }
          }
        ],
        "return_type": {
          "code": "ENUMERATION",
          "service": "TestService",
          "name": "TestEnum"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "EnumDefaultArg": {
        "id": 15,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "ENUMERATION",
              "service": "TestService",
              "name": "TestEnum"
            },
            "default_value": "BA=="
          }
        ],
        "return_type": {
          "code": "ENUMERATION",
          "service": "TestService",
          "name": "TestEnum"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "BlockingProcedure": {
        "id": 16,
        "parameters": [
          {
            "name": "n",
            "type": {
              "code": "SINT32"
            }
          },
          {
            "name": "sum",
            "type": {
              "code": "SINT32"
            },
            "default_value": "AA=="
          }
        ],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "IncrementList": {
        "id": 17,
        "parameters": [
          {
            "name": "l",
            "type": {
              "code": "LIST",
              "types": [
                {
                  "code": "SINT32"
                }
              ]
            }
          }
        ],
        "return_type": {
          "code": "LIST",
          "types": [
            {
              "code": "SINT32"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "IncrementDictionary": {
        "id": 18,
        "parameters": [
          {
            "name": "d",
            "type": {
              "code": "DICTIONARY",
              "types": [
                {
                  "code": "STRING"
                },
                {
                  "code": "SINT32"
                }
              ]
            }
          }
        ],
        "return_type": {
          "code": "DICTIONARY",
          "types": [
            {
              "code": "STRING"
            },
            {
              "code": "SINT32"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "IncrementSet": {
        "id": 19,
        "parameters": [
          {
            "name": "h",
            "type": {
              "code": "SET",
              "types": [
                {
                  "code": "SINT32"
                }
              ]
            }
          }
        ],
        "return_type": {
          "code": "SET",
          "types": [
            {
              "code": "SINT32"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "IncrementTuple": {
        "id": 20,
        "parameters": [
          {
            "name": "t",
            "type": {
              "code": "TUPLE",
              "types": [
                {
                  "code": "SINT32"
                },
                {
                  "code": "SINT64"
                }
              ]
            }
          }
        ],
        "return_type": {
          "code": "TUPLE",
          "types": [
            {
              "code": "SINT32"
            },
            {
              "code": "SINT64"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "IncrementNestedCollection": {
        "id": 21,
        "parameters": [
          {
            "name": "d",
            "type": {
              "code": "DICTIONARY",
              "types": [
                {
                  "code": "STRING"
                },
                {
                  "code": "LIST",
                  "types": [
                    {
                      "code": "SINT32"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "return_type": {
          "code": "DICTIONARY",
          "types": [
            {
              "code": "STRING"
            },
            {
              "code": "LIST",
              "types": [
                {
                  "code": "SINT32"
                }
              ]
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "TupleDefault": {
        "id": 22,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "TUPLE",
              "types": [
                {
                  "code": "SINT32"
                },
                {
                  "code": "BOOL"
                }
              ]
            },
            "default_value": "CgECCgEA"
          }
        ],
        "return_type": {
          "code": "TUPLE",
          "types": [
            {
              "code": "SINT32"
            },
            {
              "code": "BOOL"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ListDefault": {
        "id": 23,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "LIST",
              "types": [
                {
                  "code": "SINT32"
                }
              ]
            },
            "default_value": "CgECCgEECgEG"
          }
        ],
        "return_type": {
          "code": "LIST",
          "types": [
            {
              "code": "SINT32"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "SetDefault": {
        "id": 24,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "SET",
              "types": [
                {
                  "code": "SINT32"
                }
              ]
            },
            "default_value": "CgECCgEECgEG"
          }
        ],
        "return_type": {
          "code": "SET",
          "types": [
            {
              "code": "SINT32"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "DictionaryDefault": {
        "id": 25,
        "parameters": [
          {
            "name": "x",
            "type": {
              "code": "DICTIONARY",
              "types": [
                {
                  "code": "SINT32"
                },
                {
                  "code": "BOOL"
                }
              ]
            },
            "default_value": "CgYKAQISAQAKBgoBBBIBAQ=="
          }
        ],
        "return_type": {
          "code": "DICTIONARY",
          "types": [
            {
              "code": "SINT32"
            },
            {
              "code": "BOOL"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "AddToObjectList": {
        "id": 26,
        "parameters": [
          {
            "name": "l",
            "type": {
              "code": "LIST",
              "types": [
                {
                  "code": "CLASS",
                  "service": "TestService",
                  "name": "TestClass"
                }
              ]
            }
          },
          {
            "name": "value",
            "type": {
              "code": "STRING"
            }
          }
        ],
        "return_type": {
          "code": "LIST",
          "types": [
            {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          ]
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "Counter": {
        "id": 27,
        "parameters": [
          {
            "name": "id",
            "type": {
              "code": "STRING"
            },
            "default_value": "AA=="
          },
          {
            "name": "divisor",
            "type": {
              "code": "SINT32"
            },
            "default_value": "Ag=="
          }
        ],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ThrowInvalidOperationException": {
        "id": 28,
        "parameters": [],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ResetInvalidOperationExceptionLater": {
        "id": 29,
        "parameters": [],
        "documentation": ""
      },
      "ThrowInvalidOperationExceptionLater": {
        "id": 30,
        "parameters": [],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ThrowArgumentException": {
        "id": 31,
        "parameters": [],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ThrowArgumentNullException": {
        "id": 32,
        "parameters": [
          {
            "name": "foo",
            "type": {
              "code": "STRING"
            }
          }
        ],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ThrowArgumentOutOfRangeException": {
        "id": 33,
        "parameters": [
          {
            "name": "foo",
            "type": {
              "code": "SINT32"
            }
          }
        ],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ThrowCustomException": {
        "id": 34,
        "parameters": [],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "ResetCustomExceptionLater": {
        "id": 35,
        "parameters": [],
        "documentation": ""
      },
      "ThrowCustomExceptionLater": {
        "id": 36,
        "parameters": [],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "OnTimer": {
        "id": 37,
        "parameters": [
          {
            "name": "milliseconds",
            "type": {
              "code": "UINT32"
            }
          },
          {
            "name": "repeats",
            "type": {
              "code": "UINT32"
            },
            "default_value": "AQ=="
          }
        ],
        "return_type": {
          "code": "EVENT"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "OnTimerUsingLambda": {
        "id": 38,
        "parameters": [
          {
            "name": "milliseconds",
            "type": {
              "code": "UINT32"
            }
          }
        ],
        "return_type": {
          "code": "EVENT"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "get_StringProperty": {
        "id": 39,
        "parameters": [],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": "<doc>\n<summary>\nProperty documentation string.\n</summary>\n</doc>"
      },
      "set_StringProperty": {
        "id": 40,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "STRING"
            }
          }
        ],
        "documentation": "<doc>\n<summary>\nProperty documentation string.\n</summary>\n</doc>"
      },
      "set_StringPropertyPrivateGet": {
        "id": 41,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "STRING"
            }
          }
        ],
        "documentation": ""
      },
      "get_StringPropertyPrivateSet": {
        "id": 42,
        "parameters": [],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "get_ObjectProperty": {
        "id": 43,
        "parameters": [],
        "return_type": {
          "code": "CLASS",
          "service": "TestService",
          "name": "TestClass"
        },
        "return_is_nullable": true,
        "documentation": ""
      },
      "set_ObjectProperty": {
        "id": 44,
        "parameters": [
          {
            "name": "value",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "documentation": ""
      },
      "TestClass_GetValue": {
        "id": 45,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": "<doc>\n<summary>\nMethod documentation string.\n</summary>\n</doc>"
      },
      "TestClass_FloatToString": {
        "id": 46,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          },
          {
            "name": "x",
            "type": {
              "code": "FLOAT"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "TestClass_ObjectToString": {
        "id": 47,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          },
          {
            "name": "other",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "TestClass_OptionalArguments": {
        "id": 48,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          },
          {
            "name": "x",
            "type": {
              "code": "STRING"
            }
          },
          {
            "name": "y",
            "type": {
              "code": "STRING"
            },
            "default_value": "A2Zvbw=="
          },
          {
            "name": "z",
            "type": {
              "code": "STRING"
            },
            "default_value": "A2Jhcg=="
          },
          {
            "name": "obj",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            },
            "default_value": "AA=="
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "TestClass_static_StaticMethod": {
        "id": 49,
        "parameters": [
          {
            "name": "a",
            "type": {
              "code": "STRING"
            },
            "default_value": "AA=="
          },
          {
            "name": "b",
            "type": {
              "code": "STRING"
            },
            "default_value": "AA=="
          }
        ],
        "return_type": {
          "code": "STRING"
        },
        "return_is_nullable": false,
        "documentation": ""
      },
      "TestClass_get_IntProperty": {
        "id": 50,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "return_type": {
          "code": "SINT32"
        },
        "return_is_nullable": false,
        "documentation": "<doc>\n<summary>\nProperty documentation string.\n</summary>\n</doc>"
      },
      "TestClass_set_IntProperty": {
        "id": 51,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          },
          {
            "name": "value",
            "type": {
              "code": "SINT32"
            }
          }
        ],
        "documentation": "<doc>\n<summary>\nProperty documentation string.\n</summary>\n</doc>"
      },
      "TestClass_get_ObjectProperty": {
        "id": 52,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "return_type": {
          "code": "CLASS",
          "service": "TestService",
          "name": "TestClass"
        },
        "return_is_nullable": true,
        "documentation": ""
      },
      "TestClass_set_ObjectProperty": {
        "id": 53,
        "parameters": [
          {
            "name": "this",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          },
          {
            "name": "value",
            "type": {
              "code": "CLASS",
              "service": "TestService",
              "name": "TestClass"
            }
          }
        ],
        "documentation": ""
      }
    },
    "classes": {
      "TestClass": {
        "documentation": "<doc>\n<summary>\nClass documentation string.\n</summary>\n</doc>"
      }
    },
    "enumerations": {
      "TestEnum": {
        "documentation": "<doc>\n<summary>\nEnum documentation string.\n</summary>\n</doc>",
        "values": [
          {
            "name": "ValueA",
            "value": 0,
            "documentation": "<doc>\n<summary>\nEnum ValueA documentation string.\n</summary>\n</doc>"
          },
          {
            "name": "ValueB",
            "value": 1,
            "documentation": "<doc>\n<summary>\nEnum ValueB documentation string.\n</summary>\n</doc>"
          },
          {
            "name": "ValueC",
            "value": 2,
            "documentation": "<doc>\n<summary>\nEnum ValueC documentation string.\n</summary>\n</doc>"
          }
        ]
      }
    },
    "exceptions": {
      "CustomException": {
        "documentation": ""
      }
    }
  }
}