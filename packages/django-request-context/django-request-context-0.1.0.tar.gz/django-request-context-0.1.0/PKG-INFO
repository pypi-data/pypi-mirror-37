Metadata-Version: 2.1
Name: django-request-context
Version: 0.1.0
Summary: Django middleware which provide request and g objectall of which are accessible everywhere, and thread isolation, just like used in flask.
Home-page: https://github.com/schecterdamien/django-request-context
Author: wujinjing
Author-email: schecterfirst@gmail.com
License: MIT
Description: 
        # django-request-context
        
        Django middleware which provide request and g object.
         all of which are accessible everywhere, and thread isolation, just like used in flask. 
        
        ## Installing
        
        Install and update using pip:
        
        ```
        pip install django-request-context
        ```
        
        
        ## Usage
        
          1. Add RequestContextMiddleware to MIDDLEWARE in settings.py
          
         ```
         import django_request_context
         
         MIDDLEWARE = [
            ...
            'django_request_context.RequestContextMiddleware',
            ...
            ] 
         ``` 
         
          2. You can get request and g objects anywhere in the project throughout the life cycle of the request.
          just import:
        ```
        from django_request_context import request, g
        ```
        
         
        ## why do you need this?
        when your django project is big enough and the function call stack is deep.
        if your want to get request object in the bottom of the call stack,
        you need to transfer request as parameters layer-by-layer, this can help you get request directly.
        the request you import from django-request-context is **readonly** object,
        if your want to convey some message you can user g object, this is a **writeable** object.
        the behavior of the request and g objects is exactly the same as in the flask.
        
Keywords: django request-context global-request
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.4.1
Description-Content-Type: text/markdown
