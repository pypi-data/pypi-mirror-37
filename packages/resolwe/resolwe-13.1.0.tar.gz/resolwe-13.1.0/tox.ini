[tox]
envlist = py36,docs,linters,packaging,migrations
skip_missing_interpreters = True

# NOTE: Running 'pip check' after installation is necessary since pip currently
# lacks dependency resolution which means it can silently create broken
# installations.
# For more details, see: https://github.com/pypa/pip/issues/988

[testenv]
install_command = pip install {opts} {packages}
extras = test
commands =
    # verify installed packages have compatible dependencies
    pip check
    # run tests
    coverage run tests/manage.py test {env:TEST_SUITE:resolwe} --noinput \
        --verbosity=2 --parallel
    coverage combine
# it is necessary to explicitly list the environment variables that need to be
# passed from Tox's invocation environment to the testing environment
passenv = TOXENV RESOLWE_* DOCKER_* DJANGO_TEST_PROCESSES TRAVIS LC_*

[testenv:docs]
# ensure we run the tests with the latest supported Python version
basepython = python3.6
extras = docs
commands =
    # verify installed packages have compatible dependencies
    pip check
    # build documentation
    python setup.py build_sphinx --fresh-env --warning-is-error

[testenv:linters]
# ensure we run the tests with the latest supported Python version
basepython = python3.6
# run all linters to see their output even if one of them fails
ignore_errors = True
commands =
    # verify installed packages have compatible dependencies
    pip check
    # run pylint
    pylint resolwe
    # check PEP 8
    pycodestyle resolwe
    # check PEP 257
    pydocstyle resolwe --match='(?!test[_s]).*\.py'
    # check order of imports
    isort --recursive --check-only --diff resolwe

[testenv:packaging]
# ensure we run the tests with the latest supported Python version
basepython = python3.6
commands =
    # verify installed packages have compatible dependencies
    pip check
    # confirm that items checked into git are in sdist
    check-manifest
    # verify package metadata and confirm the long_description will render
    # correctly on PyPI
    python setup.py check --metadata --restructuredtext --strict

[testenv:migrations]
# ensure we run the tests with the latest supported Python version
basepython = python3.6
whitelist_externals =
    bash
    psql
commands =
    psql --username={env:RESOLWE_POSTGRESQL_USER:resolwe} \
        --host={env:RESOLWE_POSTGRESQL_HOST:localhost} \
        --port={env:RESOLWE_POSTGRESQL_PORT:5432} \
        --command='CREATE DATABASE "'{env:RESOLWE_POSTGRESQL_NAME:resolwe}'"'
    python tests/manage.py migrate
    bash -c '[[ $(./tests/manage.py makemigrations --dry-run) = '\
        '"No changes detected" ]] || exit 1'
passenv = TOXENV RESOLWE_* DOCKER_* TRAVIS LC_*
