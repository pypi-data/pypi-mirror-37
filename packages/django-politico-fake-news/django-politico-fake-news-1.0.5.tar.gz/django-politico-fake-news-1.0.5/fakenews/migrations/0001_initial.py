# Generated by Django 2.1 on 2018-08-13 19:44

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_text', models.CharField(blank=True, help_text='A summary of the claim (75 character limit)', max_length=75)),
                ('archive_url', models.URLField(blank=True, help_text='A permanent record of the claim being made')),
                ('canoncial_url', models.URLField(blank=True, help_text='The original or most prominent spreading of the claim')),
            ],
        ),
        migrations.CreateModel(
            name='DisinformationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('color_primary', models.CharField(blank=True, max_length=30)),
                ('color_light', models.CharField(blank=True, max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='FactCheck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('headline', models.CharField(blank=True, help_text='A headline for the story (255 character limit)', max_length=255)),
                ('deck', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('explanation', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cover', models.URLField(blank=True, help_text='An image link to use as the cover and for social.', null=True)),
                ('is_pinned', models.BooleanField(default=False)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateField(help_text='The date this fact check was published.', null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('claim_reviewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fakenews.Claim')),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='The canoncial link to a source spreading a claim.')),
                ('publish_date', models.DateField(help_text='The date this claim was spread by this source.', null=True)),
                ('order', models.IntegerField(default=0)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fakenews.Claim')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('url', models.URLField()),
                ('description', models.TextField(blank=True, help_text='A Wikipedia-like description of the source')),
            ],
        ),
        migrations.AddField(
            model_name='share',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fakenews.Source'),
        ),
        migrations.AddField(
            model_name='claim',
            name='disinformation_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='fakenews.DisinformationType'),
        ),
        migrations.AddField(
            model_name='claim',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
